{"version":3,"sources":["webpack:///./src/store/modules/app/index.js","webpack:///./src/store/modules/dialogs/index.js","webpack:///./src/store/modules/api/api.js","webpack:///./src/store/modules/api/index.js","webpack:///./src/store/modules/entries/index.js","webpack:///./src/helpers/index.js","webpack:///./src/store/plugins.js","webpack:///./src/store/index.js","webpack:///src/components/Fundament/FundamentNav.vue","webpack:///./src/components/Fundament/FundamentNav.vue?a19c","webpack:///./src/components/Fundament/FundamentNav.vue","webpack:///./src/components/Fundament/FundamentFooter.vue?8b9e","webpack:///./src/components/Fundament/FundamentFooter.vue","webpack:///src/components/Fundament/FundamentFooter.vue","webpack:///src/components/Dialogs/LoginDialog.vue","webpack:///./src/components/Dialogs/LoginDialog.vue?f242","webpack:///./src/components/Dialogs/LoginDialog.vue","webpack:///src/components/Dialogs/LogoutDialog.vue","webpack:///./src/components/Dialogs/LogoutDialog.vue?6f5f","webpack:///./src/components/Dialogs/LogoutDialog.vue","webpack:///./src/components/Fundament/FundamentCard.vue?e22a","webpack:///./src/components/Fundament/FundamentCard.vue","webpack:///src/components/Fundament/FundamentCard.vue","webpack:///src/components/ImportPDF.vue","webpack:///./src/components/ImportPDF.vue?bd73","webpack:///./src/components/ImportPDF.vue","webpack:///src/components/Dialogs/ImportDialog.vue","webpack:///./src/components/Dialogs/ImportDialog.vue?db1f","webpack:///./src/components/Dialogs/ImportDialog.vue","webpack:///src/components/Dialogs/Dialogs.vue","webpack:///./src/components/Dialogs/Dialogs.vue?6c05","webpack:///./src/components/Dialogs/Dialogs.vue","webpack:///src/components/App.vue","webpack:///./src/components/App.vue?4c0d","webpack:///./src/components/App.vue","webpack:///./src/components/Fundament/FundamentJumbo.vue?99f6","webpack:///./src/components/Fundament/FundamentJumbo.vue","webpack:///./src/components/Fundament/FundamentSectionDiv.vue?2b80","webpack:///./src/components/Fundament/FundamentSectionDiv.vue","webpack:///src/components/Start.vue","webpack:///src/components/Fundament/FundamentJumbo.vue","webpack:///src/components/Fundament/FundamentSectionDiv.vue","webpack:///./src/components/Start.vue?ad90","webpack:///./src/components/Start.vue","webpack:///src/components/entries.vue","webpack:///./src/components/entries.vue?d4db","webpack:///./src/components/entries.vue","webpack:///./src/router/index.js","webpack:///./src/main.js"],"names":["app","namespaced","state","drawer","drawerclipped","fixed","config","miniVariant","rightDrawer","loggedin","getters","mutations","setConfig","s","loginMut","logoutMut","toggleNavDrawerMini","setNavDrawerMini","toggleNavDrawerClipped","setNavDrawerMaxi","toggleRightDrawer","toggleDrawer","actions","toggleAppMode","_ref","commit","dialogs","loginDialog","status","logoutDialog","createDialog","type","importDialog","openDialog","name","closeDialog","openCreateDialog","switchDialog","setDialog","obj","this","_vm","$info","api_domain","getDomain","setDomain","$domain","api_request","method","url","body","queryParameters","form","toLowerCase","queryUrl","keys_default","length","lib_default","a","stringify","axios_default","params","api_get","parameters","arguments","undefined","domain","$config","$queryParameters","forEach","parameterName","get_RAW_URL","get_TYPE","api_getURL","keys","map","key","encodeURIComponent","join","api_postLogin","promise_default","reject","Error","postLogin_RAW_URL","postLogin_TYPE","api_postLoginURL","api_getLogout","getLogout_RAW_URL","getLogout_TYPE","api_getLogoutURL","api_postRegister","postRegister_RAW_URL","postRegister_TYPE","api_postRegisterURL","api_getJsonschemaByName","path","replace","getJsonschemaByName_RAW_URL","getJsonschemaByName_TYPE","api_getJsonschemaByNameURL","api_postUpload","postUpload_RAW_URL","postUpload_TYPE","api_postUploadURL","api_getAssetrefCount","getAssetrefCount_RAW_URL","getAssetrefCount_TYPE","api_getAssetrefCountURL","api_getAssetref","getAssetref_RAW_URL","getAssetref_TYPE","api_getAssetrefURL","api_postAssetref","postAssetref_RAW_URL","postAssetref_TYPE","api_postAssetrefURL","api_deleteAssetref","deleteAssetref_RAW_URL","deleteAssetref_TYPE","api_deleteAssetrefURL","api_getAssetrefById","getAssetrefById_RAW_URL","getAssetrefById_TYPE","api_getAssetrefByIdURL","api_postAssetrefById","postAssetrefById_RAW_URL","postAssetrefById_TYPE","api_postAssetrefByIdURL","api_deleteAssetrefById","deleteAssetrefById_RAW_URL","deleteAssetrefById_TYPE","api_deleteAssetrefByIdURL","api_getAuthrecCount","getAuthrecCount_RAW_URL","getAuthrecCount_TYPE","api_getAuthrecCountURL","api_getAuthrec","getAuthrec_RAW_URL","getAuthrec_TYPE","api_getAuthrecURL","api_postAuthrec","postAuthrec_RAW_URL","postAuthrec_TYPE","api_postAuthrecURL","api_deleteAuthrec","deleteAuthrec_RAW_URL","deleteAuthrec_TYPE","api_deleteAuthrecURL","api_getAuthrecById","getAuthrecById_RAW_URL","getAuthrecById_TYPE","api_getAuthrecByIdURL","api_postAuthrecById","postAuthrecById_RAW_URL","postAuthrecById_TYPE","api_postAuthrecByIdURL","api_deleteAuthrecById","deleteAuthrecById_RAW_URL","deleteAuthrecById_TYPE","api_deleteAuthrecByIdURL","api_getBibrefCount","getBibrefCount_RAW_URL","getBibrefCount_TYPE","api_getBibrefCountURL","api_getBibref","getBibref_RAW_URL","getBibref_TYPE","api_getBibrefURL","api_postBibref","postBibref_RAW_URL","postBibref_TYPE","api_postBibrefURL","api_deleteBibref","deleteBibref_RAW_URL","deleteBibref_TYPE","api_deleteBibrefURL","api_getBibrefById","getBibrefById_RAW_URL","getBibrefById_TYPE","api_getBibrefByIdURL","api_postBibrefById","postBibrefById_RAW_URL","postBibrefById_TYPE","api_postBibrefByIdURL","api_deleteBibrefById","deleteBibrefById_RAW_URL","deleteBibrefById_TYPE","api_deleteBibrefByIdURL","api_getCollectCount","getCollectCount_RAW_URL","getCollectCount_TYPE","api_getCollectCountURL","api_getCollect","getCollect_RAW_URL","getCollect_TYPE","api_getCollectURL","api_postCollect","postCollect_RAW_URL","postCollect_TYPE","api_postCollectURL","api_deleteCollect","deleteCollect_RAW_URL","deleteCollect_TYPE","api_deleteCollectURL","api_getCollectById","getCollectById_RAW_URL","getCollectById_TYPE","api_getCollectByIdURL","api_postCollectById","postCollectById_RAW_URL","postCollectById_TYPE","api_postCollectByIdURL","api_deleteCollectById","deleteCollectById_RAW_URL","deleteCollectById_TYPE","api_deleteCollectByIdURL","api_getCorporationCount","getCorporationCount_RAW_URL","getCorporationCount_TYPE","api_getCorporationCountURL","api_getCorporation","getCorporation_RAW_URL","getCorporation_TYPE","api_getCorporationURL","api_postCorporation","postCorporation_RAW_URL","postCorporation_TYPE","api_postCorporationURL","api_deleteCorporation","deleteCorporation_RAW_URL","deleteCorporation_TYPE","api_deleteCorporationURL","api_getCorporationById","getCorporationById_RAW_URL","getCorporationById_TYPE","api_getCorporationByIdURL","api_postCorporationById","postCorporationById_RAW_URL","postCorporationById_TYPE","api_postCorporationByIdURL","api_deleteCorporationById","deleteCorporationById_RAW_URL","deleteCorporationById_TYPE","api_deleteCorporationByIdURL","api_getCurrencyCount","getCurrencyCount_RAW_URL","getCurrencyCount_TYPE","api_getCurrencyCountURL","api_getCurrency","getCurrency_RAW_URL","getCurrency_TYPE","api_getCurrencyURL","api_postCurrency","postCurrency_RAW_URL","postCurrency_TYPE","api_postCurrencyURL","api_deleteCurrency","deleteCurrency_RAW_URL","deleteCurrency_TYPE","api_deleteCurrencyURL","api_getCurrencyById","getCurrencyById_RAW_URL","getCurrencyById_TYPE","api_getCurrencyByIdURL","api_postCurrencyById","postCurrencyById_RAW_URL","postCurrencyById_TYPE","api_postCurrencyByIdURL","api_deleteCurrencyById","deleteCurrencyById_RAW_URL","deleteCurrencyById_TYPE","api_deleteCurrencyByIdURL","api_getDescriptorCount","getDescriptorCount_RAW_URL","getDescriptorCount_TYPE","api_getDescriptorCountURL","api_getDescriptor","getDescriptor_RAW_URL","getDescriptor_TYPE","api_getDescriptorURL","api_postDescriptor","postDescriptor_RAW_URL","postDescriptor_TYPE","api_postDescriptorURL","api_deleteDescriptor","deleteDescriptor_RAW_URL","deleteDescriptor_TYPE","api_deleteDescriptorURL","api_getDescriptorById","getDescriptorById_RAW_URL","getDescriptorById_TYPE","api_getDescriptorByIdURL","api_postDescriptorById","postDescriptorById_RAW_URL","postDescriptorById_TYPE","api_postDescriptorByIdURL","api_deleteDescriptorById","deleteDescriptorById_RAW_URL","deleteDescriptorById_TYPE","api_deleteDescriptorByIdURL","api_getEntryCount","getEntryCount_RAW_URL","getEntryCount_TYPE","api_getEntryCountURL","api_getEntry","getEntry_RAW_URL","getEntry_TYPE","api_getEntryURL","api_postEntry","postEntry_RAW_URL","postEntry_TYPE","api_postEntryURL","api_deleteEntry","deleteEntry_RAW_URL","deleteEntry_TYPE","api_deleteEntryURL","api_getEntryById","getEntryById_RAW_URL","getEntryById_TYPE","api_getEntryByIdURL","api_postEntryById","postEntryById_RAW_URL","postEntryById_TYPE","api_postEntryByIdURL","api_deleteEntryById","deleteEntryById_RAW_URL","deleteEntryById_TYPE","api_deleteEntryByIdURL","api_getInstitutionCount","getInstitutionCount_RAW_URL","getInstitutionCount_TYPE","api_getInstitutionCountURL","api_getInstitution","getInstitution_RAW_URL","getInstitution_TYPE","api_getInstitutionURL","api_postInstitution","postInstitution_RAW_URL","postInstitution_TYPE","api_postInstitutionURL","api_deleteInstitution","deleteInstitution_RAW_URL","deleteInstitution_TYPE","api_deleteInstitutionURL","api_getInstitutionById","getInstitutionById_RAW_URL","getInstitutionById_TYPE","api_getInstitutionByIdURL","api_postInstitutionById","postInstitutionById_RAW_URL","postInstitutionById_TYPE","api_postInstitutionByIdURL","api_deleteInstitutionById","deleteInstitutionById_RAW_URL","deleteInstitutionById_TYPE","api_deleteInstitutionByIdURL","api_getInventoryCount","getInventoryCount_RAW_URL","getInventoryCount_TYPE","api_getInventoryCountURL","api_getInventory","getInventory_RAW_URL","getInventory_TYPE","api_getInventoryURL","api_postInventory","postInventory_RAW_URL","postInventory_TYPE","api_postInventoryURL","api_deleteInventory","deleteInventory_RAW_URL","deleteInventory_TYPE","api_deleteInventoryURL","api_getInventoryById","getInventoryById_RAW_URL","getInventoryById_TYPE","api_getInventoryByIdURL","api_postInventoryById","postInventoryById_RAW_URL","postInventoryById_TYPE","api_postInventoryByIdURL","api_deleteInventoryById","deleteInventoryById_RAW_URL","deleteInventoryById_TYPE","api_deleteInventoryByIdURL","api_getObjectCount","getObjectCount_RAW_URL","getObjectCount_TYPE","api_getObjectCountURL","api_getObject","getObject_RAW_URL","getObject_TYPE","api_getObjectURL","api_postObject","postObject_RAW_URL","postObject_TYPE","api_postObjectURL","api_deleteObject","deleteObject_RAW_URL","deleteObject_TYPE","api_deleteObjectURL","api_getObjectById","getObjectById_RAW_URL","getObjectById_TYPE","api_getObjectByIdURL","api_postObjectById","postObjectById_RAW_URL","postObjectById_TYPE","api_postObjectByIdURL","api_deleteObjectById","deleteObjectById_RAW_URL","deleteObjectById_TYPE","api_deleteObjectByIdURL","api_getPersonCount","getPersonCount_RAW_URL","getPersonCount_TYPE","api_getPersonCountURL","api_getPerson","getPerson_RAW_URL","getPerson_TYPE","api_getPersonURL","api_postPerson","postPerson_RAW_URL","postPerson_TYPE","api_postPersonURL","api_deletePerson","deletePerson_RAW_URL","deletePerson_TYPE","api_deletePersonURL","api_getPersonById","getPersonById_RAW_URL","getPersonById_TYPE","api_getPersonByIdURL","api_postPersonById","postPersonById_RAW_URL","postPersonById_TYPE","api_postPersonByIdURL","api_deletePersonById","deletePersonById_RAW_URL","deletePersonById_TYPE","api_deletePersonByIdURL","api_getPlaceCount","getPlaceCount_RAW_URL","getPlaceCount_TYPE","api_getPlaceCountURL","api_getPlace","getPlace_RAW_URL","getPlace_TYPE","api_getPlaceURL","api_postPlace","postPlace_RAW_URL","postPlace_TYPE","api_postPlaceURL","api_deletePlace","deletePlace_RAW_URL","deletePlace_TYPE","api_deletePlaceURL","api_getPlaceById","getPlaceById_RAW_URL","getPlaceById_TYPE","api_getPlaceByIdURL","api_postPlaceById","postPlaceById_RAW_URL","postPlaceById_TYPE","api_postPlaceByIdURL","api_deletePlaceById","deletePlaceById_RAW_URL","deletePlaceById_TYPE","api_deletePlaceByIdURL","api_getProplabelCount","getProplabelCount_RAW_URL","getProplabelCount_TYPE","api_getProplabelCountURL","api_getProplabel","getProplabel_RAW_URL","getProplabel_TYPE","api_getProplabelURL","api_postProplabel","postProplabel_RAW_URL","postProplabel_TYPE","api_postProplabelURL","api_deleteProplabel","deleteProplabel_RAW_URL","deleteProplabel_TYPE","api_deleteProplabelURL","api_getProplabelById","getProplabelById_RAW_URL","getProplabelById_TYPE","api_getProplabelByIdURL","api_postProplabelById","postProplabelById_RAW_URL","postProplabelById_TYPE","api_postProplabelByIdURL","api_deleteProplabelById","deleteProplabelById_RAW_URL","deleteProplabelById_TYPE","api_deleteProplabelByIdURL","api_getTransactionCount","getTransactionCount_RAW_URL","getTransactionCount_TYPE","api_getTransactionCountURL","api_getTransaction","getTransaction_RAW_URL","getTransaction_TYPE","api_getTransactionURL","api_postTransaction","postTransaction_RAW_URL","postTransaction_TYPE","api_postTransactionURL","api_deleteTransaction","deleteTransaction_RAW_URL","deleteTransaction_TYPE","api_deleteTransactionURL","api_getTransactionById","getTransactionById_RAW_URL","getTransactionById_TYPE","api_getTransactionByIdURL","api_postTransactionById","postTransactionById_RAW_URL","postTransactionById_TYPE","api_postTransactionByIdURL","api_deleteTransactionById","deleteTransactionById_RAW_URL","deleteTransactionById_TYPE","api_deleteTransactionByIdURL","api_getUnitCount","getUnitCount_RAW_URL","getUnitCount_TYPE","api_getUnitCountURL","api_getUnit","getUnit_RAW_URL","getUnit_TYPE","api_getUnitURL","api_postUnit","postUnit_RAW_URL","postUnit_TYPE","api_postUnitURL","api_deleteUnit","deleteUnit_RAW_URL","deleteUnit_TYPE","api_deleteUnitURL","api_getUnitById","getUnitById_RAW_URL","getUnitById_TYPE","api_getUnitByIdURL","api_postUnitById","postUnitById_RAW_URL","postUnitById_TYPE","api_postUnitByIdURL","api_deleteUnitById","deleteUnitById_RAW_URL","deleteUnitById_TYPE","api_deleteUnitByIdURL","withCredentials","api","apilib","api_namespaceObject","loading","loadmsg","schemas","availableEndpoints","f","schema","types","setLoading","msg","setLoadingFinished","setSchema","attributes","init","_ref2","get","then","res","data","sa","i","_ref3","_ref4","id","sort","skip","limit","query","populate","p","t","charAt","toUpperCase","slice","resolve","catch","error","post","_ref5","_ref6","_state$apilib","defineProperty_default","_state$apilib2","delete","_ref7","_ref8","entries","setEntry","no","CONFIG","WKS","BASEURL","ENDPOINTS","BASE","TIMEOUT","PARAMS","_format","HEADERS","ADLIB","output","action","VIAF","SEARCH","httpAccept","VOCABS","ARCHE_CATEGORY","ARCHE_LIFECYCLE_STATUS","MAPS","collect_collect","edit.date","edit.time","edit.name","title","description","current_owner.lref","APIS","extconf","fetchers","assign_default","c","idx","d","idy","create","baseURL","timeout","headers","buildFetchers","helpers","methods","getAdlibRecordByID","db","_this","database","search","response","$log","getAdlibRecordsByQuery","_this2","getViafByID","_this3","getVocabsPromise","typ","getVocabsByID","_this4","splitToGetMultipleCalls","indexOf","getMultipleApiCallsByTypeAndID","typen","split","promises","push","useNull","all","o","j","typeicon","stringToBlob","str","Blob","dateToString","date","y","getFullYear","m","getMonth","toString","getDate","getHours","getMinutes","getSeconds","mapRecord","source","target","record","console","log","created","store_plugins","store","localStorage","window","e","subscribe","mutation","pState","stateObj","result","modules","k","filterForPersistantProperties","currentStore","JSON","parse","getItem","STORAGE_KEY","now","Date","SESSION_ID","dateString","setItem","stringify_default","quotaExceeded","code","number","isQuotaExceeded","vue_esm","use","vuex_esm","vue_axios_min_default","src_store","Store","plugins","strict","valueOf","FundamentNav","extends_default","Object","Fundament_FundamentNav","render","_h","$createElement","_c","_self","attrs","duration","mode","$store","class","color","mini-variant","enable-resize-watcher","dark","fill-height","on","mouseover","$event","stopPropagation","mouseleave","column","justify-space-between","_v","_l","item","value","to","startpage","icon","domProps","innerHTML","_s","staticClass","caption","_e","click","src","alt","height","row","xs3","justify-center","staticStyle","font-weight","padding","margin","letter-spacing","line-height","icons-and-text","right","model","callback","$$v","$set","expression","staticRenderFns","components_Fundament_FundamentNav","__webpack_require__","normalizeComponent","ssrContext","Fundament_FundamentFooter","grid-list-md","wrap","xs12","sm2","md2","href","rel","aria-label","sm3","components_Fundament_FundamentFooter","FundamentFooter_normalizeComponent","LoginDialog","mixins","username","password","computed","discard","login","user","Dialogs_LoginDialog","max-width","label","large","components_Dialogs_LoginDialog","LoginDialog_normalizeComponent","LogoutDialog","logout","Dialogs_LogoutDialog","components_Dialogs_LogoutDialog","LogoutDialog_normalizeComponent","Fundament_FundamentCard","appear","primary-title","textContent","_t","flat","link","components_Fundament_FundamentCard","FundamentCard_normalizeComponent","props","ImportPDF","_mixins$components$da","components","vueDropzone","vue2Dropzone_default","fundamentcard","dropzoneOptions","thumbnailWidth","maxFilesize","testdata","entryType","address","booktitle","chapter","doi","edition","institution","journal","pages","publisher","series","volume","day","month","year","authors","editors","tags","results","file","router","components_ImportPDF","ref","options","vdropzone-success","src_components_ImportPDF","ImportPDF_normalizeComponent","ImportDialog","My-Awesome-Header","importpdf","submit","onFileChange","files","dataTransfer","loadTtl","Dialogs_ImportDialog","fullscreen","hide-overlay","transition","scrollable","card","nativeOn","bottom","offset-y","Dialogs","logindialog","logoutdialog","importdialog","ImportDialog_normalizeComponent","Dialogs_Dialogs","App","fundamentnav","fundamentfooter","Dialogs_normalizeComponent","components_App","src_components_App","App_normalizeComponent","Fundament_FundamentJumbo","align-center","subtitle","Fundament_FundamentSectionDiv","fundamentjumbo","FundamentJumbo_normalizeComponent","fundamentsectiondiv","FundamentSectionDiv_normalizeComponent","components_Start","justify-space-around","sm6","src_components_Start","Start_normalizeComponent","Start","components_entries","view","text","$route","selectortype_template_index_0_src_components_entries","items","scopedSlots","_u","fn","src_components_entries","entries_normalizeComponent","vue_router_esm","src_router","routes","redirect","lang","fullPath","default","children","Content","scrollBehavior","x","vue_logger_default","dev","shortname","levels","vuetify_default","theme","primary","accent","secondary","info","vuex_router_sync","productionTip","$mount"],"mappings":"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","file":"js/app.f4a064917b2dd1a5c479.js","sourcesContent":["/* eslint no-console: [\"error\", { allow: [\"log\"] }] */\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n\nconst state = {\n  drawer: true,\n  drawerclipped: true,\n  fixed: false,\n  config: {},\n  miniVariant: false,\n  rightDrawer: false,\n  loggedin: false,\n};\n\nconst getters = {\n\n};\n\nconst mutations = {\n  setConfig(s, config) {\n    s.config = config;\n  },\n  loginMut(s) {\n    s.loggedin = true;\n  },\n  logoutMut(s) {\n    s.loggedin = false;\n  },\n  toggleNavDrawerMini(s) {\n    s.miniVariant = !s.miniVariant;\n  },\n  setNavDrawerMini(s) {\n    if (!s.drawerclipped) s.miniVariant = true;\n  },\n  toggleNavDrawerClipped(s) {\n    s.drawerclipped = !s.drawerclipped;\n  },\n  setNavDrawerMaxi(s) {\n    s.miniVariant = false;\n  },\n  toggleRightDrawer(s) {\n    s.rightDrawer = !s.rightDrawer;\n  },\n  toggleDrawer(s) {\n    s.drawer = !s.drawer;\n  },\n};\n\nconst actions = {\n  toggleAppMode({ commit }) {\n    commit('toggleDrawer');\n    commit('toggleRightDrawer');\n  },\n};\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/modules/app/index.js","/* eslint no-console: [\"error\", { allow: [\"log\"] }] */\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n/* eslint-disable no-underscore-dangle */\nconst state = {\n  loginDialog: { status: false },\n  logoutDialog: { status: false },\n  createDialog: { status: false, type: '' },\n  importDialog: { status: false },\n};\n\nconst getters = {\n\n};\n\nconst mutations = {\n  openDialog(s, name) {\n    s[name].status = true;\n  },\n  closeDialog(s, name) {\n    s[name].status = false;\n  },\n  openCreateDialog(s, type) {\n    s.createDialog.type = type;\n    s.createDialog.status = true;\n  },\n  switchDialog(s, name) {\n    s[name].status = !s[name];\n  },\n  setDialog(s, { name, obj }) {\n    this._vm.$info('store dialogs setDialog', name, obj);\n    s[name] = obj;\n  },\n};\n\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  getters,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/modules/dialogs/index.js","/* eslint-disable */\r\nimport axios from 'axios'\r\nimport qs from 'qs'\r\nlet domain = ''\r\nexport const getDomain = () => {\r\n  return domain\r\n}\r\nexport const setDomain = ($domain) => {\r\n  domain = $domain\r\n}\r\nexport const request = (method, url, body, queryParameters, form, config) => {\r\n  method = method.toLowerCase()\r\n  let keys = Object.keys(queryParameters)\r\n  let queryUrl = url\r\n  if (keys.length > 0) {\r\n    queryUrl = url + '?' + qs.stringify(queryParameters)\r\n  }\r\n  // let queryUrl = url+(keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n  if (body) {\r\n    return axios[method](queryUrl, body, config)\r\n  } else if (method === 'get') {\r\n    return axios[method](queryUrl, {\r\n      params: form\r\n    }, config)\r\n  } else {\r\n    return axios[method](queryUrl, qs.stringify(form), config)\r\n  }\r\n}\r\n/*==========================================================\r\n *\r\n ==========================================================*/\r\n/**\r\n * API root. Returns JSON Object of Metadata and available Entities\r\n * request: get\r\n * url: getURL\r\n * method: get_TYPE\r\n * raw_url: get_RAW_URL\r\n */\r\nexport const get = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const get_RAW_URL = function() {\r\n  return '/'\r\n}\r\nexport const get_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Login to the application\r\n * request: postLogin\r\n * url: postLoginURL\r\n * method: postLogin_TYPE\r\n * raw_url: postLogin_RAW_URL\r\n * @param user - Login Data.\r\n */\r\nexport const postLogin = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/login'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['user'] !== undefined) {\r\n    body = parameters['user']\r\n  }\r\n  if (parameters['user'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: user'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postLogin_RAW_URL = function() {\r\n  return '/login'\r\n}\r\nexport const postLogin_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postLoginURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/login'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Logout of the application\r\n * request: getLogout\r\n * url: getLogoutURL\r\n * method: getLogout_TYPE\r\n * raw_url: getLogout_RAW_URL\r\n */\r\nexport const getLogout = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/logout'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getLogout_RAW_URL = function() {\r\n  return '/logout'\r\n}\r\nexport const getLogout_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getLogoutURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/logout'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * New User Registration\r\n * request: postRegister\r\n * url: postRegisterURL\r\n * method: postRegister_TYPE\r\n * raw_url: postRegister_RAW_URL\r\n * @param user - Login Data.\r\n */\r\nexport const postRegister = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/register'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['user'] !== undefined) {\r\n    body = parameters['user']\r\n  }\r\n  if (parameters['user'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: user'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postRegister_RAW_URL = function() {\r\n  return '/register'\r\n}\r\nexport const postRegister_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postRegisterURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/register'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Serves an Entities JSONSchema by Name\r\n * request: getJsonschemaByName\r\n * url: getJsonschemaByNameURL\r\n * method: getJsonschemaByName_TYPE\r\n * raw_url: getJsonschemaByName_RAW_URL\r\n * @param name - Schema Name.\r\n */\r\nexport const getJsonschemaByName = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/jsonschema/{name}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{name}', `${parameters['name']}`)\r\n  if (parameters['name'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: name'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getJsonschemaByName_RAW_URL = function() {\r\n  return '/jsonschema/{name}'\r\n}\r\nexport const getJsonschemaByName_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getJsonschemaByNameURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/jsonschema/{name}'\r\n  path = path.replace('{name}', `${parameters['name']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Retrieves Image and returns corresponding AssetRef\r\n * request: postUpload\r\n * url: postUploadURL\r\n * method: postUpload_TYPE\r\n * raw_url: postUpload_RAW_URL\r\n * @param image - File Object from upload.\r\n */\r\nexport const postUpload = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/upload/'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['image'] !== undefined) {\r\n    form['image'] = parameters['image']\r\n  }\r\n  if (parameters['image'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: image'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postUpload_RAW_URL = function() {\r\n  return '/upload/'\r\n}\r\nexport const postUpload_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postUploadURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/upload/'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns the number of documents of type assetref\r\n * request: getAssetrefCount\r\n * url: getAssetrefCountURL\r\n * method: getAssetrefCount_TYPE\r\n * raw_url: getAssetrefCount_RAW_URL\r\n */\r\nexport const getAssetrefCount = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/assetref/count'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getAssetrefCount_RAW_URL = function() {\r\n  return '/assetref/count'\r\n}\r\nexport const getAssetrefCount_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getAssetrefCountURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/assetref/count'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of assetrefs\r\n * request: getAssetref\r\n * url: getAssetrefURL\r\n * method: getAssetref_TYPE\r\n * raw_url: getAssetref_RAW_URL\r\n * @param sort - Key Name to Sort by, preceded by '-' for descending, default: _id\r\n * @param skip - Number of records to skip from start, default: 0\r\n * @param limit - Number of records to return, default: 10\r\n * @param query - MongoDB Query as a well formed JSON String, ie {\"name\":\"Bob\"}\r\n * @param populate - Path to a MongoDB reference to populate, ie [{\"path\":\"customer\"},{\"path\":\"products\"}]\r\n */\r\nexport const getAssetref = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/assetref'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getAssetref_RAW_URL = function() {\r\n  return '/assetref'\r\n}\r\nexport const getAssetref_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getAssetrefURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/assetref'\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Creates a new instance of assetref\r\n * request: postAssetref\r\n * url: postAssetrefURL\r\n * method: postAssetref_TYPE\r\n * raw_url: postAssetref_RAW_URL\r\n * @param assetref -\r\n */\r\nexport const postAssetref = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/assetref'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['assetref'] !== undefined) {\r\n    body = parameters['assetref']\r\n  }\r\n  if (parameters['assetref'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: assetref'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postAssetref_RAW_URL = function() {\r\n  return '/assetref'\r\n}\r\nexport const postAssetref_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postAssetrefURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/assetref'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the entire contents of collection assetref\r\n * request: deleteAssetref\r\n * url: deleteAssetrefURL\r\n * method: deleteAssetref_TYPE\r\n * raw_url: deleteAssetref_RAW_URL\r\n */\r\nexport const deleteAssetref = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/assetref'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteAssetref_RAW_URL = function() {\r\n  return '/assetref'\r\n}\r\nexport const deleteAssetref_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteAssetrefURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/assetref'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of assetrefs\r\n * request: getAssetrefById\r\n * url: getAssetrefByIdURL\r\n * method: getAssetrefById_TYPE\r\n * raw_url: getAssetrefById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const getAssetrefById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/assetref/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getAssetrefById_RAW_URL = function() {\r\n  return '/assetref/{id}'\r\n}\r\nexport const getAssetrefById_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getAssetrefByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/assetref/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Updates the document with the given ID\r\n * request: postAssetrefById\r\n * url: postAssetrefByIdURL\r\n * method: postAssetrefById_TYPE\r\n * raw_url: postAssetrefById_RAW_URL\r\n * @param id - MongoDB document _id\r\n * @param assetref -\r\n */\r\nexport const postAssetrefById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/assetref/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters['assetref'] !== undefined) {\r\n    body = parameters['assetref']\r\n  }\r\n  if (parameters['assetref'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: assetref'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postAssetrefById_RAW_URL = function() {\r\n  return '/assetref/{id}'\r\n}\r\nexport const postAssetrefById_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postAssetrefByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/assetref/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the document with the given ID\r\n * request: deleteAssetrefById\r\n * url: deleteAssetrefByIdURL\r\n * method: deleteAssetrefById_TYPE\r\n * raw_url: deleteAssetrefById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const deleteAssetrefById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/assetref/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteAssetrefById_RAW_URL = function() {\r\n  return '/assetref/{id}'\r\n}\r\nexport const deleteAssetrefById_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteAssetrefByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/assetref/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns the number of documents of type authrec\r\n * request: getAuthrecCount\r\n * url: getAuthrecCountURL\r\n * method: getAuthrecCount_TYPE\r\n * raw_url: getAuthrecCount_RAW_URL\r\n */\r\nexport const getAuthrecCount = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/authrec/count'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getAuthrecCount_RAW_URL = function() {\r\n  return '/authrec/count'\r\n}\r\nexport const getAuthrecCount_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getAuthrecCountURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/authrec/count'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of authrecs\r\n * request: getAuthrec\r\n * url: getAuthrecURL\r\n * method: getAuthrec_TYPE\r\n * raw_url: getAuthrec_RAW_URL\r\n * @param sort - Key Name to Sort by, preceded by '-' for descending, default: _id\r\n * @param skip - Number of records to skip from start, default: 0\r\n * @param limit - Number of records to return, default: 10\r\n * @param query - MongoDB Query as a well formed JSON String, ie {\"name\":\"Bob\"}\r\n * @param populate - Path to a MongoDB reference to populate, ie [{\"path\":\"customer\"},{\"path\":\"products\"}]\r\n */\r\nexport const getAuthrec = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/authrec'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getAuthrec_RAW_URL = function() {\r\n  return '/authrec'\r\n}\r\nexport const getAuthrec_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getAuthrecURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/authrec'\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Creates a new instance of authrec\r\n * request: postAuthrec\r\n * url: postAuthrecURL\r\n * method: postAuthrec_TYPE\r\n * raw_url: postAuthrec_RAW_URL\r\n * @param authrec -\r\n */\r\nexport const postAuthrec = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/authrec'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['authrec'] !== undefined) {\r\n    body = parameters['authrec']\r\n  }\r\n  if (parameters['authrec'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: authrec'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postAuthrec_RAW_URL = function() {\r\n  return '/authrec'\r\n}\r\nexport const postAuthrec_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postAuthrecURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/authrec'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the entire contents of collection authrec\r\n * request: deleteAuthrec\r\n * url: deleteAuthrecURL\r\n * method: deleteAuthrec_TYPE\r\n * raw_url: deleteAuthrec_RAW_URL\r\n */\r\nexport const deleteAuthrec = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/authrec'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteAuthrec_RAW_URL = function() {\r\n  return '/authrec'\r\n}\r\nexport const deleteAuthrec_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteAuthrecURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/authrec'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of authrecs\r\n * request: getAuthrecById\r\n * url: getAuthrecByIdURL\r\n * method: getAuthrecById_TYPE\r\n * raw_url: getAuthrecById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const getAuthrecById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/authrec/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getAuthrecById_RAW_URL = function() {\r\n  return '/authrec/{id}'\r\n}\r\nexport const getAuthrecById_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getAuthrecByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/authrec/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Updates the document with the given ID\r\n * request: postAuthrecById\r\n * url: postAuthrecByIdURL\r\n * method: postAuthrecById_TYPE\r\n * raw_url: postAuthrecById_RAW_URL\r\n * @param id - MongoDB document _id\r\n * @param authrec -\r\n */\r\nexport const postAuthrecById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/authrec/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters['authrec'] !== undefined) {\r\n    body = parameters['authrec']\r\n  }\r\n  if (parameters['authrec'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: authrec'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postAuthrecById_RAW_URL = function() {\r\n  return '/authrec/{id}'\r\n}\r\nexport const postAuthrecById_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postAuthrecByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/authrec/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the document with the given ID\r\n * request: deleteAuthrecById\r\n * url: deleteAuthrecByIdURL\r\n * method: deleteAuthrecById_TYPE\r\n * raw_url: deleteAuthrecById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const deleteAuthrecById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/authrec/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteAuthrecById_RAW_URL = function() {\r\n  return '/authrec/{id}'\r\n}\r\nexport const deleteAuthrecById_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteAuthrecByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/authrec/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns the number of documents of type bibref\r\n * request: getBibrefCount\r\n * url: getBibrefCountURL\r\n * method: getBibrefCount_TYPE\r\n * raw_url: getBibrefCount_RAW_URL\r\n */\r\nexport const getBibrefCount = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/bibref/count'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getBibrefCount_RAW_URL = function() {\r\n  return '/bibref/count'\r\n}\r\nexport const getBibrefCount_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getBibrefCountURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/bibref/count'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of bibrefs\r\n * request: getBibref\r\n * url: getBibrefURL\r\n * method: getBibref_TYPE\r\n * raw_url: getBibref_RAW_URL\r\n * @param sort - Key Name to Sort by, preceded by '-' for descending, default: _id\r\n * @param skip - Number of records to skip from start, default: 0\r\n * @param limit - Number of records to return, default: 10\r\n * @param query - MongoDB Query as a well formed JSON String, ie {\"name\":\"Bob\"}\r\n * @param populate - Path to a MongoDB reference to populate, ie [{\"path\":\"customer\"},{\"path\":\"products\"}]\r\n */\r\nexport const getBibref = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/bibref'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getBibref_RAW_URL = function() {\r\n  return '/bibref'\r\n}\r\nexport const getBibref_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getBibrefURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/bibref'\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Creates a new instance of bibref\r\n * request: postBibref\r\n * url: postBibrefURL\r\n * method: postBibref_TYPE\r\n * raw_url: postBibref_RAW_URL\r\n * @param bibref -\r\n */\r\nexport const postBibref = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/bibref'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['bibref'] !== undefined) {\r\n    body = parameters['bibref']\r\n  }\r\n  if (parameters['bibref'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: bibref'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postBibref_RAW_URL = function() {\r\n  return '/bibref'\r\n}\r\nexport const postBibref_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postBibrefURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/bibref'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the entire contents of collection bibref\r\n * request: deleteBibref\r\n * url: deleteBibrefURL\r\n * method: deleteBibref_TYPE\r\n * raw_url: deleteBibref_RAW_URL\r\n */\r\nexport const deleteBibref = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/bibref'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteBibref_RAW_URL = function() {\r\n  return '/bibref'\r\n}\r\nexport const deleteBibref_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteBibrefURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/bibref'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of bibrefs\r\n * request: getBibrefById\r\n * url: getBibrefByIdURL\r\n * method: getBibrefById_TYPE\r\n * raw_url: getBibrefById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const getBibrefById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/bibref/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getBibrefById_RAW_URL = function() {\r\n  return '/bibref/{id}'\r\n}\r\nexport const getBibrefById_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getBibrefByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/bibref/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Updates the document with the given ID\r\n * request: postBibrefById\r\n * url: postBibrefByIdURL\r\n * method: postBibrefById_TYPE\r\n * raw_url: postBibrefById_RAW_URL\r\n * @param id - MongoDB document _id\r\n * @param bibref -\r\n */\r\nexport const postBibrefById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/bibref/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters['bibref'] !== undefined) {\r\n    body = parameters['bibref']\r\n  }\r\n  if (parameters['bibref'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: bibref'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postBibrefById_RAW_URL = function() {\r\n  return '/bibref/{id}'\r\n}\r\nexport const postBibrefById_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postBibrefByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/bibref/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the document with the given ID\r\n * request: deleteBibrefById\r\n * url: deleteBibrefByIdURL\r\n * method: deleteBibrefById_TYPE\r\n * raw_url: deleteBibrefById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const deleteBibrefById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/bibref/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteBibrefById_RAW_URL = function() {\r\n  return '/bibref/{id}'\r\n}\r\nexport const deleteBibrefById_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteBibrefByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/bibref/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns the number of documents of type collect\r\n * request: getCollectCount\r\n * url: getCollectCountURL\r\n * method: getCollectCount_TYPE\r\n * raw_url: getCollectCount_RAW_URL\r\n */\r\nexport const getCollectCount = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/collect/count'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getCollectCount_RAW_URL = function() {\r\n  return '/collect/count'\r\n}\r\nexport const getCollectCount_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getCollectCountURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/collect/count'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of collects\r\n * request: getCollect\r\n * url: getCollectURL\r\n * method: getCollect_TYPE\r\n * raw_url: getCollect_RAW_URL\r\n * @param sort - Key Name to Sort by, preceded by '-' for descending, default: _id\r\n * @param skip - Number of records to skip from start, default: 0\r\n * @param limit - Number of records to return, default: 10\r\n * @param query - MongoDB Query as a well formed JSON String, ie {\"name\":\"Bob\"}\r\n * @param populate - Path to a MongoDB reference to populate, ie [{\"path\":\"customer\"},{\"path\":\"products\"}]\r\n */\r\nexport const getCollect = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/collect'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getCollect_RAW_URL = function() {\r\n  return '/collect'\r\n}\r\nexport const getCollect_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getCollectURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/collect'\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Creates a new instance of collect\r\n * request: postCollect\r\n * url: postCollectURL\r\n * method: postCollect_TYPE\r\n * raw_url: postCollect_RAW_URL\r\n * @param collect -\r\n */\r\nexport const postCollect = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/collect'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['collect'] !== undefined) {\r\n    body = parameters['collect']\r\n  }\r\n  if (parameters['collect'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: collect'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postCollect_RAW_URL = function() {\r\n  return '/collect'\r\n}\r\nexport const postCollect_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postCollectURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/collect'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the entire contents of collection collect\r\n * request: deleteCollect\r\n * url: deleteCollectURL\r\n * method: deleteCollect_TYPE\r\n * raw_url: deleteCollect_RAW_URL\r\n */\r\nexport const deleteCollect = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/collect'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteCollect_RAW_URL = function() {\r\n  return '/collect'\r\n}\r\nexport const deleteCollect_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteCollectURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/collect'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of collects\r\n * request: getCollectById\r\n * url: getCollectByIdURL\r\n * method: getCollectById_TYPE\r\n * raw_url: getCollectById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const getCollectById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/collect/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getCollectById_RAW_URL = function() {\r\n  return '/collect/{id}'\r\n}\r\nexport const getCollectById_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getCollectByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/collect/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Updates the document with the given ID\r\n * request: postCollectById\r\n * url: postCollectByIdURL\r\n * method: postCollectById_TYPE\r\n * raw_url: postCollectById_RAW_URL\r\n * @param id - MongoDB document _id\r\n * @param collect -\r\n */\r\nexport const postCollectById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/collect/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters['collect'] !== undefined) {\r\n    body = parameters['collect']\r\n  }\r\n  if (parameters['collect'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: collect'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postCollectById_RAW_URL = function() {\r\n  return '/collect/{id}'\r\n}\r\nexport const postCollectById_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postCollectByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/collect/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the document with the given ID\r\n * request: deleteCollectById\r\n * url: deleteCollectByIdURL\r\n * method: deleteCollectById_TYPE\r\n * raw_url: deleteCollectById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const deleteCollectById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/collect/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteCollectById_RAW_URL = function() {\r\n  return '/collect/{id}'\r\n}\r\nexport const deleteCollectById_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteCollectByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/collect/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns the number of documents of type corporation\r\n * request: getCorporationCount\r\n * url: getCorporationCountURL\r\n * method: getCorporationCount_TYPE\r\n * raw_url: getCorporationCount_RAW_URL\r\n */\r\nexport const getCorporationCount = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/corporation/count'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getCorporationCount_RAW_URL = function() {\r\n  return '/corporation/count'\r\n}\r\nexport const getCorporationCount_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getCorporationCountURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/corporation/count'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of corporations\r\n * request: getCorporation\r\n * url: getCorporationURL\r\n * method: getCorporation_TYPE\r\n * raw_url: getCorporation_RAW_URL\r\n * @param sort - Key Name to Sort by, preceded by '-' for descending, default: _id\r\n * @param skip - Number of records to skip from start, default: 0\r\n * @param limit - Number of records to return, default: 10\r\n * @param query - MongoDB Query as a well formed JSON String, ie {\"name\":\"Bob\"}\r\n * @param populate - Path to a MongoDB reference to populate, ie [{\"path\":\"customer\"},{\"path\":\"products\"}]\r\n */\r\nexport const getCorporation = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/corporation'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getCorporation_RAW_URL = function() {\r\n  return '/corporation'\r\n}\r\nexport const getCorporation_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getCorporationURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/corporation'\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Creates a new instance of corporation\r\n * request: postCorporation\r\n * url: postCorporationURL\r\n * method: postCorporation_TYPE\r\n * raw_url: postCorporation_RAW_URL\r\n * @param corporation -\r\n */\r\nexport const postCorporation = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/corporation'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['corporation'] !== undefined) {\r\n    body = parameters['corporation']\r\n  }\r\n  if (parameters['corporation'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: corporation'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postCorporation_RAW_URL = function() {\r\n  return '/corporation'\r\n}\r\nexport const postCorporation_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postCorporationURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/corporation'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the entire contents of collection corporation\r\n * request: deleteCorporation\r\n * url: deleteCorporationURL\r\n * method: deleteCorporation_TYPE\r\n * raw_url: deleteCorporation_RAW_URL\r\n */\r\nexport const deleteCorporation = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/corporation'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteCorporation_RAW_URL = function() {\r\n  return '/corporation'\r\n}\r\nexport const deleteCorporation_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteCorporationURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/corporation'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of corporations\r\n * request: getCorporationById\r\n * url: getCorporationByIdURL\r\n * method: getCorporationById_TYPE\r\n * raw_url: getCorporationById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const getCorporationById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/corporation/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getCorporationById_RAW_URL = function() {\r\n  return '/corporation/{id}'\r\n}\r\nexport const getCorporationById_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getCorporationByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/corporation/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Updates the document with the given ID\r\n * request: postCorporationById\r\n * url: postCorporationByIdURL\r\n * method: postCorporationById_TYPE\r\n * raw_url: postCorporationById_RAW_URL\r\n * @param id - MongoDB document _id\r\n * @param corporation -\r\n */\r\nexport const postCorporationById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/corporation/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters['corporation'] !== undefined) {\r\n    body = parameters['corporation']\r\n  }\r\n  if (parameters['corporation'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: corporation'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postCorporationById_RAW_URL = function() {\r\n  return '/corporation/{id}'\r\n}\r\nexport const postCorporationById_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postCorporationByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/corporation/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the document with the given ID\r\n * request: deleteCorporationById\r\n * url: deleteCorporationByIdURL\r\n * method: deleteCorporationById_TYPE\r\n * raw_url: deleteCorporationById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const deleteCorporationById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/corporation/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteCorporationById_RAW_URL = function() {\r\n  return '/corporation/{id}'\r\n}\r\nexport const deleteCorporationById_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteCorporationByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/corporation/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns the number of documents of type currency\r\n * request: getCurrencyCount\r\n * url: getCurrencyCountURL\r\n * method: getCurrencyCount_TYPE\r\n * raw_url: getCurrencyCount_RAW_URL\r\n */\r\nexport const getCurrencyCount = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/currency/count'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getCurrencyCount_RAW_URL = function() {\r\n  return '/currency/count'\r\n}\r\nexport const getCurrencyCount_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getCurrencyCountURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/currency/count'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of currencys\r\n * request: getCurrency\r\n * url: getCurrencyURL\r\n * method: getCurrency_TYPE\r\n * raw_url: getCurrency_RAW_URL\r\n * @param sort - Key Name to Sort by, preceded by '-' for descending, default: _id\r\n * @param skip - Number of records to skip from start, default: 0\r\n * @param limit - Number of records to return, default: 10\r\n * @param query - MongoDB Query as a well formed JSON String, ie {\"name\":\"Bob\"}\r\n * @param populate - Path to a MongoDB reference to populate, ie [{\"path\":\"customer\"},{\"path\":\"products\"}]\r\n */\r\nexport const getCurrency = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/currency'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getCurrency_RAW_URL = function() {\r\n  return '/currency'\r\n}\r\nexport const getCurrency_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getCurrencyURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/currency'\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Creates a new instance of currency\r\n * request: postCurrency\r\n * url: postCurrencyURL\r\n * method: postCurrency_TYPE\r\n * raw_url: postCurrency_RAW_URL\r\n * @param currency -\r\n */\r\nexport const postCurrency = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/currency'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['currency'] !== undefined) {\r\n    body = parameters['currency']\r\n  }\r\n  if (parameters['currency'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: currency'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postCurrency_RAW_URL = function() {\r\n  return '/currency'\r\n}\r\nexport const postCurrency_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postCurrencyURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/currency'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the entire contents of collection currency\r\n * request: deleteCurrency\r\n * url: deleteCurrencyURL\r\n * method: deleteCurrency_TYPE\r\n * raw_url: deleteCurrency_RAW_URL\r\n */\r\nexport const deleteCurrency = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/currency'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteCurrency_RAW_URL = function() {\r\n  return '/currency'\r\n}\r\nexport const deleteCurrency_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteCurrencyURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/currency'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of currencys\r\n * request: getCurrencyById\r\n * url: getCurrencyByIdURL\r\n * method: getCurrencyById_TYPE\r\n * raw_url: getCurrencyById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const getCurrencyById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/currency/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getCurrencyById_RAW_URL = function() {\r\n  return '/currency/{id}'\r\n}\r\nexport const getCurrencyById_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getCurrencyByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/currency/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Updates the document with the given ID\r\n * request: postCurrencyById\r\n * url: postCurrencyByIdURL\r\n * method: postCurrencyById_TYPE\r\n * raw_url: postCurrencyById_RAW_URL\r\n * @param id - MongoDB document _id\r\n * @param currency -\r\n */\r\nexport const postCurrencyById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/currency/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters['currency'] !== undefined) {\r\n    body = parameters['currency']\r\n  }\r\n  if (parameters['currency'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: currency'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postCurrencyById_RAW_URL = function() {\r\n  return '/currency/{id}'\r\n}\r\nexport const postCurrencyById_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postCurrencyByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/currency/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the document with the given ID\r\n * request: deleteCurrencyById\r\n * url: deleteCurrencyByIdURL\r\n * method: deleteCurrencyById_TYPE\r\n * raw_url: deleteCurrencyById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const deleteCurrencyById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/currency/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteCurrencyById_RAW_URL = function() {\r\n  return '/currency/{id}'\r\n}\r\nexport const deleteCurrencyById_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteCurrencyByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/currency/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns the number of documents of type descriptor\r\n * request: getDescriptorCount\r\n * url: getDescriptorCountURL\r\n * method: getDescriptorCount_TYPE\r\n * raw_url: getDescriptorCount_RAW_URL\r\n */\r\nexport const getDescriptorCount = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/descriptor/count'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getDescriptorCount_RAW_URL = function() {\r\n  return '/descriptor/count'\r\n}\r\nexport const getDescriptorCount_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getDescriptorCountURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/descriptor/count'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of descriptors\r\n * request: getDescriptor\r\n * url: getDescriptorURL\r\n * method: getDescriptor_TYPE\r\n * raw_url: getDescriptor_RAW_URL\r\n * @param sort - Key Name to Sort by, preceded by '-' for descending, default: _id\r\n * @param skip - Number of records to skip from start, default: 0\r\n * @param limit - Number of records to return, default: 10\r\n * @param query - MongoDB Query as a well formed JSON String, ie {\"name\":\"Bob\"}\r\n * @param populate - Path to a MongoDB reference to populate, ie [{\"path\":\"customer\"},{\"path\":\"products\"}]\r\n */\r\nexport const getDescriptor = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/descriptor'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getDescriptor_RAW_URL = function() {\r\n  return '/descriptor'\r\n}\r\nexport const getDescriptor_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getDescriptorURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/descriptor'\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Creates a new instance of descriptor\r\n * request: postDescriptor\r\n * url: postDescriptorURL\r\n * method: postDescriptor_TYPE\r\n * raw_url: postDescriptor_RAW_URL\r\n * @param descriptor -\r\n */\r\nexport const postDescriptor = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/descriptor'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['descriptor'] !== undefined) {\r\n    body = parameters['descriptor']\r\n  }\r\n  if (parameters['descriptor'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: descriptor'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postDescriptor_RAW_URL = function() {\r\n  return '/descriptor'\r\n}\r\nexport const postDescriptor_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postDescriptorURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/descriptor'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the entire contents of collection descriptor\r\n * request: deleteDescriptor\r\n * url: deleteDescriptorURL\r\n * method: deleteDescriptor_TYPE\r\n * raw_url: deleteDescriptor_RAW_URL\r\n */\r\nexport const deleteDescriptor = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/descriptor'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteDescriptor_RAW_URL = function() {\r\n  return '/descriptor'\r\n}\r\nexport const deleteDescriptor_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteDescriptorURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/descriptor'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of descriptors\r\n * request: getDescriptorById\r\n * url: getDescriptorByIdURL\r\n * method: getDescriptorById_TYPE\r\n * raw_url: getDescriptorById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const getDescriptorById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/descriptor/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getDescriptorById_RAW_URL = function() {\r\n  return '/descriptor/{id}'\r\n}\r\nexport const getDescriptorById_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getDescriptorByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/descriptor/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Updates the document with the given ID\r\n * request: postDescriptorById\r\n * url: postDescriptorByIdURL\r\n * method: postDescriptorById_TYPE\r\n * raw_url: postDescriptorById_RAW_URL\r\n * @param id - MongoDB document _id\r\n * @param descriptor -\r\n */\r\nexport const postDescriptorById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/descriptor/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters['descriptor'] !== undefined) {\r\n    body = parameters['descriptor']\r\n  }\r\n  if (parameters['descriptor'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: descriptor'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postDescriptorById_RAW_URL = function() {\r\n  return '/descriptor/{id}'\r\n}\r\nexport const postDescriptorById_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postDescriptorByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/descriptor/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the document with the given ID\r\n * request: deleteDescriptorById\r\n * url: deleteDescriptorByIdURL\r\n * method: deleteDescriptorById_TYPE\r\n * raw_url: deleteDescriptorById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const deleteDescriptorById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/descriptor/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteDescriptorById_RAW_URL = function() {\r\n  return '/descriptor/{id}'\r\n}\r\nexport const deleteDescriptorById_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteDescriptorByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/descriptor/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns the number of documents of type entry\r\n * request: getEntryCount\r\n * url: getEntryCountURL\r\n * method: getEntryCount_TYPE\r\n * raw_url: getEntryCount_RAW_URL\r\n */\r\nexport const getEntryCount = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/entry/count'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getEntryCount_RAW_URL = function() {\r\n  return '/entry/count'\r\n}\r\nexport const getEntryCount_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getEntryCountURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/entry/count'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of entrys\r\n * request: getEntry\r\n * url: getEntryURL\r\n * method: getEntry_TYPE\r\n * raw_url: getEntry_RAW_URL\r\n * @param sort - Key Name to Sort by, preceded by '-' for descending, default: _id\r\n * @param skip - Number of records to skip from start, default: 0\r\n * @param limit - Number of records to return, default: 10\r\n * @param query - MongoDB Query as a well formed JSON String, ie {\"name\":\"Bob\"}\r\n * @param populate - Path to a MongoDB reference to populate, ie [{\"path\":\"customer\"},{\"path\":\"products\"}]\r\n */\r\nexport const getEntry = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/entry'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getEntry_RAW_URL = function() {\r\n  return '/entry'\r\n}\r\nexport const getEntry_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getEntryURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/entry'\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Creates a new instance of entry\r\n * request: postEntry\r\n * url: postEntryURL\r\n * method: postEntry_TYPE\r\n * raw_url: postEntry_RAW_URL\r\n * @param entry -\r\n */\r\nexport const postEntry = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/entry'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['entry'] !== undefined) {\r\n    body = parameters['entry']\r\n  }\r\n  if (parameters['entry'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: entry'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postEntry_RAW_URL = function() {\r\n  return '/entry'\r\n}\r\nexport const postEntry_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postEntryURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/entry'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the entire contents of collection entry\r\n * request: deleteEntry\r\n * url: deleteEntryURL\r\n * method: deleteEntry_TYPE\r\n * raw_url: deleteEntry_RAW_URL\r\n */\r\nexport const deleteEntry = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/entry'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteEntry_RAW_URL = function() {\r\n  return '/entry'\r\n}\r\nexport const deleteEntry_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteEntryURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/entry'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of entrys\r\n * request: getEntryById\r\n * url: getEntryByIdURL\r\n * method: getEntryById_TYPE\r\n * raw_url: getEntryById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const getEntryById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/entry/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getEntryById_RAW_URL = function() {\r\n  return '/entry/{id}'\r\n}\r\nexport const getEntryById_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getEntryByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/entry/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Updates the document with the given ID\r\n * request: postEntryById\r\n * url: postEntryByIdURL\r\n * method: postEntryById_TYPE\r\n * raw_url: postEntryById_RAW_URL\r\n * @param id - MongoDB document _id\r\n * @param entry -\r\n */\r\nexport const postEntryById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/entry/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters['entry'] !== undefined) {\r\n    body = parameters['entry']\r\n  }\r\n  if (parameters['entry'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: entry'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postEntryById_RAW_URL = function() {\r\n  return '/entry/{id}'\r\n}\r\nexport const postEntryById_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postEntryByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/entry/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the document with the given ID\r\n * request: deleteEntryById\r\n * url: deleteEntryByIdURL\r\n * method: deleteEntryById_TYPE\r\n * raw_url: deleteEntryById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const deleteEntryById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/entry/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteEntryById_RAW_URL = function() {\r\n  return '/entry/{id}'\r\n}\r\nexport const deleteEntryById_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteEntryByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/entry/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns the number of documents of type institution\r\n * request: getInstitutionCount\r\n * url: getInstitutionCountURL\r\n * method: getInstitutionCount_TYPE\r\n * raw_url: getInstitutionCount_RAW_URL\r\n */\r\nexport const getInstitutionCount = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/institution/count'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getInstitutionCount_RAW_URL = function() {\r\n  return '/institution/count'\r\n}\r\nexport const getInstitutionCount_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getInstitutionCountURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/institution/count'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of institutions\r\n * request: getInstitution\r\n * url: getInstitutionURL\r\n * method: getInstitution_TYPE\r\n * raw_url: getInstitution_RAW_URL\r\n * @param sort - Key Name to Sort by, preceded by '-' for descending, default: _id\r\n * @param skip - Number of records to skip from start, default: 0\r\n * @param limit - Number of records to return, default: 10\r\n * @param query - MongoDB Query as a well formed JSON String, ie {\"name\":\"Bob\"}\r\n * @param populate - Path to a MongoDB reference to populate, ie [{\"path\":\"customer\"},{\"path\":\"products\"}]\r\n */\r\nexport const getInstitution = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/institution'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getInstitution_RAW_URL = function() {\r\n  return '/institution'\r\n}\r\nexport const getInstitution_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getInstitutionURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/institution'\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Creates a new instance of institution\r\n * request: postInstitution\r\n * url: postInstitutionURL\r\n * method: postInstitution_TYPE\r\n * raw_url: postInstitution_RAW_URL\r\n * @param institution -\r\n */\r\nexport const postInstitution = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/institution'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['institution'] !== undefined) {\r\n    body = parameters['institution']\r\n  }\r\n  if (parameters['institution'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: institution'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postInstitution_RAW_URL = function() {\r\n  return '/institution'\r\n}\r\nexport const postInstitution_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postInstitutionURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/institution'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the entire contents of collection institution\r\n * request: deleteInstitution\r\n * url: deleteInstitutionURL\r\n * method: deleteInstitution_TYPE\r\n * raw_url: deleteInstitution_RAW_URL\r\n */\r\nexport const deleteInstitution = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/institution'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteInstitution_RAW_URL = function() {\r\n  return '/institution'\r\n}\r\nexport const deleteInstitution_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteInstitutionURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/institution'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of institutions\r\n * request: getInstitutionById\r\n * url: getInstitutionByIdURL\r\n * method: getInstitutionById_TYPE\r\n * raw_url: getInstitutionById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const getInstitutionById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/institution/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getInstitutionById_RAW_URL = function() {\r\n  return '/institution/{id}'\r\n}\r\nexport const getInstitutionById_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getInstitutionByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/institution/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Updates the document with the given ID\r\n * request: postInstitutionById\r\n * url: postInstitutionByIdURL\r\n * method: postInstitutionById_TYPE\r\n * raw_url: postInstitutionById_RAW_URL\r\n * @param id - MongoDB document _id\r\n * @param institution -\r\n */\r\nexport const postInstitutionById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/institution/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters['institution'] !== undefined) {\r\n    body = parameters['institution']\r\n  }\r\n  if (parameters['institution'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: institution'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postInstitutionById_RAW_URL = function() {\r\n  return '/institution/{id}'\r\n}\r\nexport const postInstitutionById_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postInstitutionByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/institution/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the document with the given ID\r\n * request: deleteInstitutionById\r\n * url: deleteInstitutionByIdURL\r\n * method: deleteInstitutionById_TYPE\r\n * raw_url: deleteInstitutionById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const deleteInstitutionById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/institution/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteInstitutionById_RAW_URL = function() {\r\n  return '/institution/{id}'\r\n}\r\nexport const deleteInstitutionById_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteInstitutionByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/institution/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns the number of documents of type inventory\r\n * request: getInventoryCount\r\n * url: getInventoryCountURL\r\n * method: getInventoryCount_TYPE\r\n * raw_url: getInventoryCount_RAW_URL\r\n */\r\nexport const getInventoryCount = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/inventory/count'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getInventoryCount_RAW_URL = function() {\r\n  return '/inventory/count'\r\n}\r\nexport const getInventoryCount_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getInventoryCountURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/inventory/count'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of inventorys\r\n * request: getInventory\r\n * url: getInventoryURL\r\n * method: getInventory_TYPE\r\n * raw_url: getInventory_RAW_URL\r\n * @param sort - Key Name to Sort by, preceded by '-' for descending, default: _id\r\n * @param skip - Number of records to skip from start, default: 0\r\n * @param limit - Number of records to return, default: 10\r\n * @param query - MongoDB Query as a well formed JSON String, ie {\"name\":\"Bob\"}\r\n * @param populate - Path to a MongoDB reference to populate, ie [{\"path\":\"customer\"},{\"path\":\"products\"}]\r\n */\r\nexport const getInventory = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/inventory'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getInventory_RAW_URL = function() {\r\n  return '/inventory'\r\n}\r\nexport const getInventory_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getInventoryURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/inventory'\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Creates a new instance of inventory\r\n * request: postInventory\r\n * url: postInventoryURL\r\n * method: postInventory_TYPE\r\n * raw_url: postInventory_RAW_URL\r\n * @param inventory -\r\n */\r\nexport const postInventory = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/inventory'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['inventory'] !== undefined) {\r\n    body = parameters['inventory']\r\n  }\r\n  if (parameters['inventory'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: inventory'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postInventory_RAW_URL = function() {\r\n  return '/inventory'\r\n}\r\nexport const postInventory_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postInventoryURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/inventory'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the entire contents of collection inventory\r\n * request: deleteInventory\r\n * url: deleteInventoryURL\r\n * method: deleteInventory_TYPE\r\n * raw_url: deleteInventory_RAW_URL\r\n */\r\nexport const deleteInventory = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/inventory'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteInventory_RAW_URL = function() {\r\n  return '/inventory'\r\n}\r\nexport const deleteInventory_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteInventoryURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/inventory'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of inventorys\r\n * request: getInventoryById\r\n * url: getInventoryByIdURL\r\n * method: getInventoryById_TYPE\r\n * raw_url: getInventoryById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const getInventoryById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/inventory/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getInventoryById_RAW_URL = function() {\r\n  return '/inventory/{id}'\r\n}\r\nexport const getInventoryById_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getInventoryByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/inventory/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Updates the document with the given ID\r\n * request: postInventoryById\r\n * url: postInventoryByIdURL\r\n * method: postInventoryById_TYPE\r\n * raw_url: postInventoryById_RAW_URL\r\n * @param id - MongoDB document _id\r\n * @param inventory -\r\n */\r\nexport const postInventoryById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/inventory/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters['inventory'] !== undefined) {\r\n    body = parameters['inventory']\r\n  }\r\n  if (parameters['inventory'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: inventory'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postInventoryById_RAW_URL = function() {\r\n  return '/inventory/{id}'\r\n}\r\nexport const postInventoryById_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postInventoryByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/inventory/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the document with the given ID\r\n * request: deleteInventoryById\r\n * url: deleteInventoryByIdURL\r\n * method: deleteInventoryById_TYPE\r\n * raw_url: deleteInventoryById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const deleteInventoryById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/inventory/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteInventoryById_RAW_URL = function() {\r\n  return '/inventory/{id}'\r\n}\r\nexport const deleteInventoryById_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteInventoryByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/inventory/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns the number of documents of type object\r\n * request: getObjectCount\r\n * url: getObjectCountURL\r\n * method: getObjectCount_TYPE\r\n * raw_url: getObjectCount_RAW_URL\r\n */\r\nexport const getObjectCount = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/object/count'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getObjectCount_RAW_URL = function() {\r\n  return '/object/count'\r\n}\r\nexport const getObjectCount_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getObjectCountURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/object/count'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of objects\r\n * request: getObject\r\n * url: getObjectURL\r\n * method: getObject_TYPE\r\n * raw_url: getObject_RAW_URL\r\n * @param sort - Key Name to Sort by, preceded by '-' for descending, default: _id\r\n * @param skip - Number of records to skip from start, default: 0\r\n * @param limit - Number of records to return, default: 10\r\n * @param query - MongoDB Query as a well formed JSON String, ie {\"name\":\"Bob\"}\r\n * @param populate - Path to a MongoDB reference to populate, ie [{\"path\":\"customer\"},{\"path\":\"products\"}]\r\n */\r\nexport const getObject = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/object'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getObject_RAW_URL = function() {\r\n  return '/object'\r\n}\r\nexport const getObject_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getObjectURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/object'\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Creates a new instance of object\r\n * request: postObject\r\n * url: postObjectURL\r\n * method: postObject_TYPE\r\n * raw_url: postObject_RAW_URL\r\n * @param object -\r\n */\r\nexport const postObject = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/object'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['object'] !== undefined) {\r\n    body = parameters['object']\r\n  }\r\n  if (parameters['object'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: object'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postObject_RAW_URL = function() {\r\n  return '/object'\r\n}\r\nexport const postObject_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postObjectURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/object'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the entire contents of collection object\r\n * request: deleteObject\r\n * url: deleteObjectURL\r\n * method: deleteObject_TYPE\r\n * raw_url: deleteObject_RAW_URL\r\n */\r\nexport const deleteObject = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/object'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteObject_RAW_URL = function() {\r\n  return '/object'\r\n}\r\nexport const deleteObject_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteObjectURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/object'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of objects\r\n * request: getObjectById\r\n * url: getObjectByIdURL\r\n * method: getObjectById_TYPE\r\n * raw_url: getObjectById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const getObjectById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/object/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getObjectById_RAW_URL = function() {\r\n  return '/object/{id}'\r\n}\r\nexport const getObjectById_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getObjectByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/object/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Updates the document with the given ID\r\n * request: postObjectById\r\n * url: postObjectByIdURL\r\n * method: postObjectById_TYPE\r\n * raw_url: postObjectById_RAW_URL\r\n * @param id - MongoDB document _id\r\n * @param object -\r\n */\r\nexport const postObjectById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/object/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters['object'] !== undefined) {\r\n    body = parameters['object']\r\n  }\r\n  if (parameters['object'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: object'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postObjectById_RAW_URL = function() {\r\n  return '/object/{id}'\r\n}\r\nexport const postObjectById_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postObjectByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/object/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the document with the given ID\r\n * request: deleteObjectById\r\n * url: deleteObjectByIdURL\r\n * method: deleteObjectById_TYPE\r\n * raw_url: deleteObjectById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const deleteObjectById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/object/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteObjectById_RAW_URL = function() {\r\n  return '/object/{id}'\r\n}\r\nexport const deleteObjectById_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteObjectByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/object/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns the number of documents of type person\r\n * request: getPersonCount\r\n * url: getPersonCountURL\r\n * method: getPersonCount_TYPE\r\n * raw_url: getPersonCount_RAW_URL\r\n */\r\nexport const getPersonCount = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/person/count'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getPersonCount_RAW_URL = function() {\r\n  return '/person/count'\r\n}\r\nexport const getPersonCount_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getPersonCountURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/person/count'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of persons\r\n * request: getPerson\r\n * url: getPersonURL\r\n * method: getPerson_TYPE\r\n * raw_url: getPerson_RAW_URL\r\n * @param sort - Key Name to Sort by, preceded by '-' for descending, default: _id\r\n * @param skip - Number of records to skip from start, default: 0\r\n * @param limit - Number of records to return, default: 10\r\n * @param query - MongoDB Query as a well formed JSON String, ie {\"name\":\"Bob\"}\r\n * @param populate - Path to a MongoDB reference to populate, ie [{\"path\":\"customer\"},{\"path\":\"products\"}]\r\n */\r\nexport const getPerson = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/person'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getPerson_RAW_URL = function() {\r\n  return '/person'\r\n}\r\nexport const getPerson_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getPersonURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/person'\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Creates a new instance of person\r\n * request: postPerson\r\n * url: postPersonURL\r\n * method: postPerson_TYPE\r\n * raw_url: postPerson_RAW_URL\r\n * @param person -\r\n */\r\nexport const postPerson = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/person'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['person'] !== undefined) {\r\n    body = parameters['person']\r\n  }\r\n  if (parameters['person'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: person'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postPerson_RAW_URL = function() {\r\n  return '/person'\r\n}\r\nexport const postPerson_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postPersonURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/person'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the entire contents of collection person\r\n * request: deletePerson\r\n * url: deletePersonURL\r\n * method: deletePerson_TYPE\r\n * raw_url: deletePerson_RAW_URL\r\n */\r\nexport const deletePerson = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/person'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deletePerson_RAW_URL = function() {\r\n  return '/person'\r\n}\r\nexport const deletePerson_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deletePersonURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/person'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of persons\r\n * request: getPersonById\r\n * url: getPersonByIdURL\r\n * method: getPersonById_TYPE\r\n * raw_url: getPersonById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const getPersonById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/person/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getPersonById_RAW_URL = function() {\r\n  return '/person/{id}'\r\n}\r\nexport const getPersonById_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getPersonByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/person/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Updates the document with the given ID\r\n * request: postPersonById\r\n * url: postPersonByIdURL\r\n * method: postPersonById_TYPE\r\n * raw_url: postPersonById_RAW_URL\r\n * @param id - MongoDB document _id\r\n * @param person -\r\n */\r\nexport const postPersonById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/person/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters['person'] !== undefined) {\r\n    body = parameters['person']\r\n  }\r\n  if (parameters['person'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: person'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postPersonById_RAW_URL = function() {\r\n  return '/person/{id}'\r\n}\r\nexport const postPersonById_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postPersonByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/person/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the document with the given ID\r\n * request: deletePersonById\r\n * url: deletePersonByIdURL\r\n * method: deletePersonById_TYPE\r\n * raw_url: deletePersonById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const deletePersonById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/person/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deletePersonById_RAW_URL = function() {\r\n  return '/person/{id}'\r\n}\r\nexport const deletePersonById_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deletePersonByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/person/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns the number of documents of type place\r\n * request: getPlaceCount\r\n * url: getPlaceCountURL\r\n * method: getPlaceCount_TYPE\r\n * raw_url: getPlaceCount_RAW_URL\r\n */\r\nexport const getPlaceCount = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/place/count'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getPlaceCount_RAW_URL = function() {\r\n  return '/place/count'\r\n}\r\nexport const getPlaceCount_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getPlaceCountURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/place/count'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of places\r\n * request: getPlace\r\n * url: getPlaceURL\r\n * method: getPlace_TYPE\r\n * raw_url: getPlace_RAW_URL\r\n * @param sort - Key Name to Sort by, preceded by '-' for descending, default: _id\r\n * @param skip - Number of records to skip from start, default: 0\r\n * @param limit - Number of records to return, default: 10\r\n * @param query - MongoDB Query as a well formed JSON String, ie {\"name\":\"Bob\"}\r\n * @param populate - Path to a MongoDB reference to populate, ie [{\"path\":\"customer\"},{\"path\":\"products\"}]\r\n */\r\nexport const getPlace = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/place'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getPlace_RAW_URL = function() {\r\n  return '/place'\r\n}\r\nexport const getPlace_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getPlaceURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/place'\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Creates a new instance of place\r\n * request: postPlace\r\n * url: postPlaceURL\r\n * method: postPlace_TYPE\r\n * raw_url: postPlace_RAW_URL\r\n * @param place -\r\n */\r\nexport const postPlace = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/place'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['place'] !== undefined) {\r\n    body = parameters['place']\r\n  }\r\n  if (parameters['place'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: place'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postPlace_RAW_URL = function() {\r\n  return '/place'\r\n}\r\nexport const postPlace_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postPlaceURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/place'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the entire contents of collection place\r\n * request: deletePlace\r\n * url: deletePlaceURL\r\n * method: deletePlace_TYPE\r\n * raw_url: deletePlace_RAW_URL\r\n */\r\nexport const deletePlace = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/place'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deletePlace_RAW_URL = function() {\r\n  return '/place'\r\n}\r\nexport const deletePlace_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deletePlaceURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/place'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of places\r\n * request: getPlaceById\r\n * url: getPlaceByIdURL\r\n * method: getPlaceById_TYPE\r\n * raw_url: getPlaceById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const getPlaceById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/place/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getPlaceById_RAW_URL = function() {\r\n  return '/place/{id}'\r\n}\r\nexport const getPlaceById_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getPlaceByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/place/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Updates the document with the given ID\r\n * request: postPlaceById\r\n * url: postPlaceByIdURL\r\n * method: postPlaceById_TYPE\r\n * raw_url: postPlaceById_RAW_URL\r\n * @param id - MongoDB document _id\r\n * @param place -\r\n */\r\nexport const postPlaceById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/place/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters['place'] !== undefined) {\r\n    body = parameters['place']\r\n  }\r\n  if (parameters['place'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: place'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postPlaceById_RAW_URL = function() {\r\n  return '/place/{id}'\r\n}\r\nexport const postPlaceById_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postPlaceByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/place/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the document with the given ID\r\n * request: deletePlaceById\r\n * url: deletePlaceByIdURL\r\n * method: deletePlaceById_TYPE\r\n * raw_url: deletePlaceById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const deletePlaceById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/place/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deletePlaceById_RAW_URL = function() {\r\n  return '/place/{id}'\r\n}\r\nexport const deletePlaceById_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deletePlaceByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/place/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns the number of documents of type proplabel\r\n * request: getProplabelCount\r\n * url: getProplabelCountURL\r\n * method: getProplabelCount_TYPE\r\n * raw_url: getProplabelCount_RAW_URL\r\n */\r\nexport const getProplabelCount = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/proplabel/count'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getProplabelCount_RAW_URL = function() {\r\n  return '/proplabel/count'\r\n}\r\nexport const getProplabelCount_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getProplabelCountURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/proplabel/count'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of proplabels\r\n * request: getProplabel\r\n * url: getProplabelURL\r\n * method: getProplabel_TYPE\r\n * raw_url: getProplabel_RAW_URL\r\n * @param sort - Key Name to Sort by, preceded by '-' for descending, default: _id\r\n * @param skip - Number of records to skip from start, default: 0\r\n * @param limit - Number of records to return, default: 10\r\n * @param query - MongoDB Query as a well formed JSON String, ie {\"name\":\"Bob\"}\r\n * @param populate - Path to a MongoDB reference to populate, ie [{\"path\":\"customer\"},{\"path\":\"products\"}]\r\n */\r\nexport const getProplabel = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/proplabel'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getProplabel_RAW_URL = function() {\r\n  return '/proplabel'\r\n}\r\nexport const getProplabel_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getProplabelURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/proplabel'\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Creates a new instance of proplabel\r\n * request: postProplabel\r\n * url: postProplabelURL\r\n * method: postProplabel_TYPE\r\n * raw_url: postProplabel_RAW_URL\r\n * @param proplabel -\r\n */\r\nexport const postProplabel = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/proplabel'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['proplabel'] !== undefined) {\r\n    body = parameters['proplabel']\r\n  }\r\n  if (parameters['proplabel'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: proplabel'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postProplabel_RAW_URL = function() {\r\n  return '/proplabel'\r\n}\r\nexport const postProplabel_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postProplabelURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/proplabel'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the entire contents of collection proplabel\r\n * request: deleteProplabel\r\n * url: deleteProplabelURL\r\n * method: deleteProplabel_TYPE\r\n * raw_url: deleteProplabel_RAW_URL\r\n */\r\nexport const deleteProplabel = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/proplabel'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteProplabel_RAW_URL = function() {\r\n  return '/proplabel'\r\n}\r\nexport const deleteProplabel_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteProplabelURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/proplabel'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of proplabels\r\n * request: getProplabelById\r\n * url: getProplabelByIdURL\r\n * method: getProplabelById_TYPE\r\n * raw_url: getProplabelById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const getProplabelById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/proplabel/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getProplabelById_RAW_URL = function() {\r\n  return '/proplabel/{id}'\r\n}\r\nexport const getProplabelById_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getProplabelByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/proplabel/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Updates the document with the given ID\r\n * request: postProplabelById\r\n * url: postProplabelByIdURL\r\n * method: postProplabelById_TYPE\r\n * raw_url: postProplabelById_RAW_URL\r\n * @param id - MongoDB document _id\r\n * @param proplabel -\r\n */\r\nexport const postProplabelById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/proplabel/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters['proplabel'] !== undefined) {\r\n    body = parameters['proplabel']\r\n  }\r\n  if (parameters['proplabel'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: proplabel'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postProplabelById_RAW_URL = function() {\r\n  return '/proplabel/{id}'\r\n}\r\nexport const postProplabelById_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postProplabelByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/proplabel/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the document with the given ID\r\n * request: deleteProplabelById\r\n * url: deleteProplabelByIdURL\r\n * method: deleteProplabelById_TYPE\r\n * raw_url: deleteProplabelById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const deleteProplabelById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/proplabel/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteProplabelById_RAW_URL = function() {\r\n  return '/proplabel/{id}'\r\n}\r\nexport const deleteProplabelById_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteProplabelByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/proplabel/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns the number of documents of type transaction\r\n * request: getTransactionCount\r\n * url: getTransactionCountURL\r\n * method: getTransactionCount_TYPE\r\n * raw_url: getTransactionCount_RAW_URL\r\n */\r\nexport const getTransactionCount = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/transaction/count'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getTransactionCount_RAW_URL = function() {\r\n  return '/transaction/count'\r\n}\r\nexport const getTransactionCount_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getTransactionCountURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/transaction/count'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of transactions\r\n * request: getTransaction\r\n * url: getTransactionURL\r\n * method: getTransaction_TYPE\r\n * raw_url: getTransaction_RAW_URL\r\n * @param sort - Key Name to Sort by, preceded by '-' for descending, default: _id\r\n * @param skip - Number of records to skip from start, default: 0\r\n * @param limit - Number of records to return, default: 10\r\n * @param query - MongoDB Query as a well formed JSON String, ie {\"name\":\"Bob\"}\r\n * @param populate - Path to a MongoDB reference to populate, ie [{\"path\":\"customer\"},{\"path\":\"products\"}]\r\n */\r\nexport const getTransaction = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/transaction'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getTransaction_RAW_URL = function() {\r\n  return '/transaction'\r\n}\r\nexport const getTransaction_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getTransactionURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/transaction'\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Creates a new instance of transaction\r\n * request: postTransaction\r\n * url: postTransactionURL\r\n * method: postTransaction_TYPE\r\n * raw_url: postTransaction_RAW_URL\r\n * @param transaction -\r\n */\r\nexport const postTransaction = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/transaction'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['transaction'] !== undefined) {\r\n    body = parameters['transaction']\r\n  }\r\n  if (parameters['transaction'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: transaction'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postTransaction_RAW_URL = function() {\r\n  return '/transaction'\r\n}\r\nexport const postTransaction_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postTransactionURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/transaction'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the entire contents of collection transaction\r\n * request: deleteTransaction\r\n * url: deleteTransactionURL\r\n * method: deleteTransaction_TYPE\r\n * raw_url: deleteTransaction_RAW_URL\r\n */\r\nexport const deleteTransaction = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/transaction'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteTransaction_RAW_URL = function() {\r\n  return '/transaction'\r\n}\r\nexport const deleteTransaction_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteTransactionURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/transaction'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of transactions\r\n * request: getTransactionById\r\n * url: getTransactionByIdURL\r\n * method: getTransactionById_TYPE\r\n * raw_url: getTransactionById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const getTransactionById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/transaction/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getTransactionById_RAW_URL = function() {\r\n  return '/transaction/{id}'\r\n}\r\nexport const getTransactionById_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getTransactionByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/transaction/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Updates the document with the given ID\r\n * request: postTransactionById\r\n * url: postTransactionByIdURL\r\n * method: postTransactionById_TYPE\r\n * raw_url: postTransactionById_RAW_URL\r\n * @param id - MongoDB document _id\r\n * @param transaction -\r\n */\r\nexport const postTransactionById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/transaction/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters['transaction'] !== undefined) {\r\n    body = parameters['transaction']\r\n  }\r\n  if (parameters['transaction'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: transaction'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postTransactionById_RAW_URL = function() {\r\n  return '/transaction/{id}'\r\n}\r\nexport const postTransactionById_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postTransactionByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/transaction/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the document with the given ID\r\n * request: deleteTransactionById\r\n * url: deleteTransactionByIdURL\r\n * method: deleteTransactionById_TYPE\r\n * raw_url: deleteTransactionById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const deleteTransactionById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/transaction/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteTransactionById_RAW_URL = function() {\r\n  return '/transaction/{id}'\r\n}\r\nexport const deleteTransactionById_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteTransactionByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/transaction/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns the number of documents of type unit\r\n * request: getUnitCount\r\n * url: getUnitCountURL\r\n * method: getUnitCount_TYPE\r\n * raw_url: getUnitCount_RAW_URL\r\n */\r\nexport const getUnitCount = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/unit/count'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getUnitCount_RAW_URL = function() {\r\n  return '/unit/count'\r\n}\r\nexport const getUnitCount_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getUnitCountURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/unit/count'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of units\r\n * request: getUnit\r\n * url: getUnitURL\r\n * method: getUnit_TYPE\r\n * raw_url: getUnit_RAW_URL\r\n * @param sort - Key Name to Sort by, preceded by '-' for descending, default: _id\r\n * @param skip - Number of records to skip from start, default: 0\r\n * @param limit - Number of records to return, default: 10\r\n * @param query - MongoDB Query as a well formed JSON String, ie {\"name\":\"Bob\"}\r\n * @param populate - Path to a MongoDB reference to populate, ie [{\"path\":\"customer\"},{\"path\":\"products\"}]\r\n */\r\nexport const getUnit = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/unit'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getUnit_RAW_URL = function() {\r\n  return '/unit'\r\n}\r\nexport const getUnit_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getUnitURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/unit'\r\n  if (parameters['sort'] !== undefined) {\r\n    queryParameters['sort'] = parameters['sort']\r\n  }\r\n  if (parameters['skip'] !== undefined) {\r\n    queryParameters['skip'] = parameters['skip']\r\n  }\r\n  if (parameters['limit'] !== undefined) {\r\n    queryParameters['limit'] = parameters['limit']\r\n  }\r\n  if (parameters['query'] !== undefined) {\r\n    queryParameters['query'] = parameters['query']\r\n  }\r\n  if (parameters['populate'] !== undefined) {\r\n    queryParameters['populate'] = parameters['populate']\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Creates a new instance of unit\r\n * request: postUnit\r\n * url: postUnitURL\r\n * method: postUnit_TYPE\r\n * raw_url: postUnit_RAW_URL\r\n * @param unit -\r\n */\r\nexport const postUnit = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/unit'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters['unit'] !== undefined) {\r\n    body = parameters['unit']\r\n  }\r\n  if (parameters['unit'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: unit'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postUnit_RAW_URL = function() {\r\n  return '/unit'\r\n}\r\nexport const postUnit_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postUnitURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/unit'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the entire contents of collection unit\r\n * request: deleteUnit\r\n * url: deleteUnitURL\r\n * method: deleteUnit_TYPE\r\n * raw_url: deleteUnit_RAW_URL\r\n */\r\nexport const deleteUnit = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/unit'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteUnit_RAW_URL = function() {\r\n  return '/unit'\r\n}\r\nexport const deleteUnit_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteUnitURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/unit'\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Returns a List of units\r\n * request: getUnitById\r\n * url: getUnitByIdURL\r\n * method: getUnitById_TYPE\r\n * raw_url: getUnitById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const getUnitById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/unit/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('get', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const getUnitById_RAW_URL = function() {\r\n  return '/unit/{id}'\r\n}\r\nexport const getUnitById_TYPE = function() {\r\n  return 'get'\r\n}\r\nexport const getUnitByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/unit/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Updates the document with the given ID\r\n * request: postUnitById\r\n * url: postUnitByIdURL\r\n * method: postUnitById_TYPE\r\n * raw_url: postUnitById_RAW_URL\r\n * @param id - MongoDB document _id\r\n * @param unit -\r\n */\r\nexport const postUnitById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/unit/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters['unit'] !== undefined) {\r\n    body = parameters['unit']\r\n  }\r\n  if (parameters['unit'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: unit'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('post', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const postUnitById_RAW_URL = function() {\r\n  return '/unit/{id}'\r\n}\r\nexport const postUnitById_TYPE = function() {\r\n  return 'post'\r\n}\r\nexport const postUnitByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/unit/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n/**\r\n * Deletes the document with the given ID\r\n * request: deleteUnitById\r\n * url: deleteUnitByIdURL\r\n * method: deleteUnitById_TYPE\r\n * raw_url: deleteUnitById_RAW_URL\r\n * @param id - MongoDB document _id\r\n */\r\nexport const deleteUnitById = function(parameters = {}) {\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  const config = parameters.$config\r\n  let path = '/unit/{id}'\r\n  let body\r\n  let queryParameters = {}\r\n  let form = {}\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters['id'] === undefined) {\r\n    return Promise.reject(new Error('Missing required  parameter: id'))\r\n  }\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    });\r\n  }\r\n  return request('delete', domain + path, body, queryParameters, form, config)\r\n}\r\nexport const deleteUnitById_RAW_URL = function() {\r\n  return '/unit/{id}'\r\n}\r\nexport const deleteUnitById_TYPE = function() {\r\n  return 'delete'\r\n}\r\nexport const deleteUnitByIdURL = function(parameters = {}) {\r\n  let queryParameters = {}\r\n  const domain = parameters.$domain ? parameters.$domain : getDomain()\r\n  let path = '/unit/{id}'\r\n  path = path.replace('{id}', `${parameters['id']}`)\r\n  if (parameters.$queryParameters) {\r\n    Object.keys(parameters.$queryParameters).forEach(function(parameterName) {\r\n      queryParameters[parameterName] = parameters.$queryParameters[parameterName]\r\n    })\r\n  }\r\n  let keys = Object.keys(queryParameters)\r\n  return domain + path + (keys.length > 0 ? '?' + (keys.map(key => key + '=' + encodeURIComponent(queryParameters[key])).join('&')) : '')\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/modules/api/api.js","import * as api from './api';\n\napi.setDomain('https://wksgoose.eos.arz.oeaw.ac.at/api/v1');\n\n\nconst state = {\n  apilib: api,\n  loading: false,\n  loadmsg: '',\n  schemas: {},\n};\n\nconst $config = {\n  withCredentials: true\n};\n\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n/* eslint no-console: [\"error\", { allow: [\"log\"] }] */\n/* eslint-disable no-underscore-dangle */\nconst getters = {\n  availableEndpoints: s => s.apilib.keys,\n  f: s => name => s.apilib[name],\n  schema: s => name => s.schemas[name],\n  types: s => s.schemas.keys,\n};\n\nconst mutations = {\n  setConfig(s, config) {\n    s.config = config;\n  },\n  setLoading(s, msg) {\n    s.loading = true;\n    s.loadmsg = msg;\n  },\n  setLoadingFinished(s) {\n    s.loading = false;\n    s.loadmsg = '';\n  },\n  setSchema(s, { type, attributes }) {\n    if (type && attributes) {\n      s.schemas[type] = attributes;\n    }\n  },\n};\n\nconst actions = {\n  init({ state, commit }) {\n    commit('setLoading', 'Loading Database Configuration.');\n    state.apilib.get( { $config } ).then((res) => {\n      if (res.data.data && res.data.data.length > 0) {\n        const sa = res.data.data;\n        for (let i = 0; i < sa.length; i++) {\n          commit('setSchema', sa[i]);\n        }\n        commit('setLoadingFinished');\n      }\n    });\n  },\n  get({ state, commit }, { type, id, sort, skip, limit, query, populate }) {\n    let p = {};\n    let t = type.charAt(0).toUpperCase() + type.slice(1);\n    return new Promise((resolve, reject) => {\n      if (type && id) {\n        commit('setLoading', `Getting ${type} ${id} from Database`);\n        p = state.apilib[`get${t}ById`]({ id, $config });\n      } else if (type && !id) {\n        commit('setLoading', `Getting Queryset of ${type} from Database`);\n        p = state.apilib[`get${t}`]({ sort, skip, limit, query, populate, $config });\n      } else reject('Invalid or Insufficient Parameters');\n      p.then((res) => {\n        commit('setLoadingFinished');\n        resolve(res);\n      })\n      .catch((error) => {\n        commit('setLoadingFinished');\n        reject(error);\n      });\n    });\n  },\n  post({ state, commit }, { type, id, body }) {\n    let p = {};\n    let t = type.charAt(0).toUpperCase() + type.slice(1);\n    return new Promise((resolve, reject) => {\n      if (type && id) {\n        commit('setLoading', `Updating ${type} ${id} to Database`);\n        p = state.apilib[`post${t}ByID`]({ id, [type]: body, $config });\n      } else if (type && !id) {\n        commit('setLoading', `Creating a ${type} in Database`);\n        p = state.apilib[`post${t}`]({ [type]: body, $config });\n      } else reject('Invalid or Insufficient Parameters');\n      p.then((res) => {\n        commit('setLoadingFinished');\n        resolve(res);\n      })\n      .catch((error) => {\n        commit('setLoadingFinished');\n        reject(error);\n      });\n    });\n  },\n  delete({ state, commit }, { type, id }) {\n    let p = {};\n    let t = type.charAt(0).toUpperCase() + type.slice(1);\n    return new Promise((resolve, reject) => {\n      if (type && id) {\n        commit('setLoading', `Deleting ${type} ${id} in Database`);\n        p = state.apilib[`delete${t}ByID`]({ id });\n      } else reject('Invalid or Insufficient Parameters');\n      p.then((res) => {\n        commit('setLoadingFinished');\n        resolve(res);\n      })\n      .catch((error) => {\n        commit('setLoadingFinished');\n        reject(error);\n      });\n    });\n  },\n};\n\n\nexport default {\n  namespaced: true,\n  state,\n  getters,\n  mutations,\n  actions,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/modules/api/index.js","/* eslint no-console: [\"error\", { allow: [\"log\"] }] */\n/* eslint no-param-reassign: [\"error\", { \"props\": false }] */\n/* eslint-disable no-underscore-dangle */\nconst state = {\n  entries: [],\n};\n\nconst getters = {\n\n};\n\nconst mutations = {\n  setEntry(s, { no , obj }) {\n    s[no] = obj;\n  },\n};\n\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  getters,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/modules/entries/index.js","import axios from 'axios';\n// import exampleAPI from '../../static/example_api.json';\n// import exampleAPI from '../../static/newsletter.json';\n\n/* eslint no-console: [\"error\", { allow: [\"log\"] }] */\n/* eslint-disable spaced-comment */\n// this could go to an external file, to be excluded from commits etc\nconst CONFIG = {\n  WKS: {\n    BASEURL: 'https://wksgoose.eos.arz.oeaw.ac.at/api/v1/',\n    ENDPOINTS: {\n      BASE: '/',\n    },\n    TIMEOUT: 15000,\n    PARAMS: {\n      _format: 'json',\n    },\n    HEADERS: {},\n  },\n  ADLIB: {\n    BASEURL: 'http://kgunivie.w07adlibdb1.arz.oeaw.ac.at',\n    ENDPOINTS: {\n      BASE: '/wwwopac.ashx',\n    },\n    TIMEOUT: 15000,\n    PARAMS: {\n      output: 'json',\n      action: 'search',\n      limit: '1000',\n    },\n    HEADERS: {},\n  },\n  VIAF: {\n    BASEURL: 'https://www.viaf.org/viaf/',\n    ENDPOINTS: {\n      BASE: '',\n      SEARCH: 'search',\n    },\n    TIMEOUT: 5000,\n    PARAMS: {\n      httpAccept: 'application/json',\n    },\n    HEADERS: {},\n  },\n  VOCABS: {\n    BASEURL: 'https://vocabs.acdh.oeaw.ac.at/rest/v1/',\n    ENDPOINTS: {\n      ARCHE_CATEGORY: 'arche_category/search/',\n      ARCHE_LIFECYCLE_STATUS: 'arche_lifecycle_status/search/',\n    },\n    TIMEOUT: 5000,\n    PARAMS: {\n    },\n    HEADERS: {},\n  },\n};\n\nconst MAPS = {\n  \"collect_collect\":{\n    \"edit.date\":\"editdate\",\n    \"edit.time\":\"edittime\",\n    \"edit.name\":\"editname\",\n    \"title\":\"name_0\",\n    \"description\":\"description_0\",\n    \"current_owner.lref\":\"collector_people\"\n  },\n};\n\n\nlet APIS = {};\n\nfunction buildFetchers(extconf) {\n  // this.$info('Helpers', 'buildFetchers(extconf)', extconf);\n  const fetchers = {};\n  // let ep = [];\n  if (extconf) Object.assign(CONFIG, extconf);\n  const c = Object.keys(CONFIG);\n  let idx = c.length - 1;\n  while (idx + 1) {\n    const d = Object.keys(CONFIG[c[idx]].ENDPOINTS);\n    let idy = d.length - 1;\n    fetchers[c[idx]] = {};\n    while (idy + 1) {\n      fetchers[c[idx]][d[idy]] = axios.create({\n        baseURL: CONFIG[c[idx]].BASEURL + CONFIG[c[idx]].ENDPOINTS[d[idy]],\n        timeout: CONFIG[c[idx]].TIMEOUT,\n        params: CONFIG[c[idx]].PARAMS,\n        headers: CONFIG[c[idx]].HEADERS,\n      });\n      idy -= 1;\n    }\n    idx -= 1;\n  }\n  return fetchers;\n}\n\nAPIS = buildFetchers();\n\nexport default {\n  data() {\n    return {\n      APIS,\n    };\n  },\n  methods: {\n    getAdlibRecordByID(db, id) {\n      this.$info('Helpers', 'getAdlibRecordByID', db, id);\n      if (db && id) {\n        return APIS.ADLIB.BASE.get('', {\n          params: {\n            database: db,\n            search: `priref=${id}`\n          }\n        }).then((response) => {\n          this.$log('response', response.data);\n          return Promise.resolve(response.data);\n        }, (error) => {\n          this.$log('errortree, request failed', error);\n          return Promise.reject(error);\n        });\n      }\n      return Promise.reject('no ID was given');\n    },\n    getAdlibRecordsByQuery(db, query) {\n      this.$info('Helpers', 'getAdlibRecordByQuery', db, query);\n      if (db && query) {\n        return APIS.ADLIB.BASE.get('', {\n          params: {\n            database: db,\n            search: query,\n          }\n        }).then((response) => {\n          this.$log('response', response.data);\n          return Promise.resolve(response.data);\n        }, (error) => {\n          this.$log('errortree, request failed', error);\n          return Promise.reject(error);\n        });\n      }\n      return Promise.reject('no ID was given');\n    },\n    getViafByID(id) {\n      this.$info('Helpers', 'getViafByID(id)', id);\n      if (id) {\n        return APIS.VIAF.BASE.get(`${id}/`).then((response) => {\n          this.$log('response', response.data);\n          return Promise.resolve(response.data);\n        }, (error) => {\n          this.$log('errortree, request failed', error);\n          return Promise.reject(error);\n        });\n      }\n      this.$log('errortree, no id');\n      return Promise.reject('no ID was given');\n    },\n    getVocabsPromise(id, typ) {\n      const type = typ.toUpperCase();\n      this.$info('Helpers', 'getVocabsPromise(id, type)', id, type);\n      return APIS.VOCABS[type].get('', {\n        params: {\n          query: `${id}*`,\n        },\n      });\n    },\n    getVocabsByID(id, typ) {\n      const type = typ.toUpperCase();\n      this.$info('Helpers', 'getVocabsByID(id, type)', id, type);\n      if (id && type && APIS.VOCABS[type]) {\n        return APIS.VOCABS[type].get('', {\n          params: {\n            query: `${id}*`,\n          },\n        }).then((response) => {\n          this.$log('response', response);\n          return Promise.resolve(response.data);\n        }, (error) => {\n          this.$log('errortree, request failed', error);\n          return Promise.reject(error);\n        });\n      }\n      return Promise.reject('failed to recieve vocabs');\n    },\n    splitToGetMultipleCalls(id, typ) {\n      this.$info('Helpers', 'splitToGetMultipleCalls(id, type)', id, typ);\n      if (typ.indexOf('Or') === -1) {\n        return this.getMultipleApiCallsByTypeAndID(id, typ);\n      }\n      const typen = typ.split('Or');\n      const promises = [];\n      for (let i = 0; i < typen.length; i += 1) {\n        promises.push(this.getMultipleApiCallsByTypeAndID(id, typen[i]).catch(this.useNull));\n      }\n      return Promise.all(promises).then((res) => {\n        // this.$debug('res All promises', res);\n        const data = [];\n        for (let i = 0; i < res.length; i += 1) {\n          if (res[i] !== null) {\n            const o = res[i];\n            for (let j = 0; j < o.length; j += 1) {\n              data.push(o[j]);\n            }\n          }\n        }\n        // this.$debug('Data', data);\n        return Promise.resolve(data);\n      })\n      .catch((res) => {\n        Promise.reject('Could not receive data', res);\n      });\n    },\n    typeicon(typ) {\n      if (typ) {\n        const type = typ.toUpperCase();\n        switch (type) {\n          case 'X':\n            return 'highlight_off';\n          case 'check':\n            return 'check_circle';\n          case 'KEYBOARD':\n            return 'keyboard';\n          case 'https://vocabs.acdh.oeaw.ac.at/schema#Resource':\n            return 'developer_board';\n          case 'PERSONS':\n          case 'persons':\n          case 'https://vocabs.acdh.oeaw.ac.at/schema#Persons':\n            return 'person';\n          case 'PLACES':\n          case 'https://vocabs.acdh.oeaw.ac.at/schema#Place':\n            return 'place';\n          case 'ORGANISATIONS':\n          case 'https://vocabs.acdh.oeaw.ac.at/schema#Organisation':\n            return 'device_hub';\n          case 'ARCHE_CATEGORY':\n            return 'folder_open';\n          case 'ARCHE_LIFECYCLE_STATUS':\n            return 'donut_large';\n          default: return 'folder';\n        }\n      }\n      return 'folder';\n    },\n    stringToBlob(str) {\n      return new Blob([str], {\n        type: 'text/ttl;',\n      });\n    },\n    dateToString(date) {\n      const y = date.getFullYear() - 2000;\n      let m;\n      if (date.getMonth() < 10) {\n        m = '0'.toString() + (date.getMonth() + 1);\n      } else {\n        m = date.getMonth() + 1;\n      }\n      let d;\n      if (date.getDate() < 10) {\n        d = '0'.toString() + date.getDate();\n      } else {\n        d = date.getDate();\n      }\n      return `${d}/${m}/${y} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\n    },\n    mapRecord(source, target, record) {\n      let t = {};\n      let map = MAPS[`${source}_${target}`];\n      let keys = Object.keys(map);\n      console.log(map, keys, record);\n      for (var i = 0; i < keys.length; i++) {\n        if(record[keys[i]] && map[keys[i]].split('_').length == 1) {\n          t[map[keys[i]]] = record[keys[i]]\n        }\n        else if (record[keys[i]] && map[keys[i]].split('_')[1] == '0') {\n          t[map[keys[i]].split('_')[0]] = record[keys[i]][0]\n        }\n        else if (record[keys[i]] &&  map[keys[i]].split('_')[1] && map[keys[i]].split('_')[1] != '0') {\n          t[map[keys[i]].split('_')[0]] = `${map[keys[i]].split('_')[1]}_${record[keys[i]]}`\n        }\n      }\n      return t;\n    }\n  },\n  created() {\n    this.$info('Helpers', 'created');\n  },\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/helpers/index.js","/* eslint-disable arrow-parens */\n/* eslint-disable default-case */\n/* eslint-disable no-underscore-dangle */\nimport {\n  STORAGE_KEY,\n  SESSION_ID,\n} from './index';\nimport HELPERS from '../helpers';\n\n// helper for checking error code for full storage\nfunction isQuotaExceeded(e) {\n  let quotaExceeded = false;\n  if (e) {\n    if (e.code) {\n      switch (e.code) {\n        case 22:\n          quotaExceeded = true;\n          break;\n        case 1014:\n          // Firefox\n          if (e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n            quotaExceeded = true;\n          }\n          break;\n      }\n    } else if (e.number === -2147024882) {\n      // Internet Explorer 8\n      quotaExceeded = true;\n    }\n  }\n  return quotaExceeded;\n}\n\n\n// helper function for filtering for properties that need to be persistent.\nfunction filterForPersistantProperties(stateObj) {\n  const result = {};\n  const modules = Object.keys(stateObj);\n  // const values = Object.values(stateObj); // obj: {name: value }\n  for (let k = 0; k < modules.length; k += 1) {\n    result[modules[k]] = {};\n    const m = stateObj[modules[k]];\n    const p = m.p || [];\n    for (let i = 0; i < p.length; i += 1) {\n      result[modules[k]][p[i]] = m[p[i]];\n    }\n  }\n  return result;\n}\n\nconst localStoragePlugin = store => {\n  let localStorage;\n  try {\n    localStorage = window.localStorage;\n  } catch (e) {\n    store.commit('n3/updateStorageStatus', false);\n  }\n  if (localStorage) {\n    store.subscribe((mutation, state) => {\n      const triggerMutations = ['n3/stopProcessing', 'JSONschema/setEntry', 'JSONschema/setSchema'];\n      if (triggerMutations.indexOf(mutation.type) > -1) {\n        const pState = filterForPersistantProperties(state);\n        const currentStore = JSON.parse(window.localStorage.getItem(STORAGE_KEY) || '{}');\n        const now = Date.now();\n        currentStore[SESSION_ID] = { pState,\n          date: now,\n          dateString: HELPERS.methods.dateToString(new Date(now)),\n        };\n        try {\n          localStorage.setItem(STORAGE_KEY, JSON.stringify(currentStore));\n          store.commit('n3/updateStorageStatus', true);\n        } catch (e) {\n          if (isQuotaExceeded(e)) {\n            store.commit('n3/updateStorageStatus', false);\n            // Storage full, maybe notify user or do some clean-up\n          }\n          store.commit('n3/updateStorageStatus', false);\n        }\n      }\n    });\n  }\n};\n\nexport default [localStoragePlugin];\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/plugins.js","import Vue from 'vue';\nimport Vuex from 'vuex';\nimport Axios from 'axios';\nimport VueAxios from 'vue-axios';\nimport createLogger from 'vuex/dist/logger';\nimport app from './modules/app/index';\nimport dialogs from './modules/dialogs/index';\nimport api from './modules/api/index';\nimport entries from './modules/entries/index';\nimport plugins from './plugins';\n\n\nVue.use(Vuex);\nVue.use(VueAxios, Axios);\n\n\nif (process.env.NODE_ENV !== 'production') {\n  plugins.push(createLogger());\n}\n\nexport default new Vuex.Store({\n  modules: {\n    app,\n    dialogs,\n    api,\n    entries,\n  },\n  plugins,\n  strict: false,\n});\n\n\nexport const STORAGE_KEY = 'MetaDataEditor';\nexport const SESSION_ID = `SESSION_${Date.now().valueOf().toString(36)}`;\n\n\n\n// WEBPACK FOOTER //\n// ./src/store/index.js","<template>\n  <div>\n    <transition :duration=\"200\" name=\"slideLeft\" mode=\"out-in\">\n      <v-navigation-drawer\n        v-if=\"$store.state.app.drawer\"\n        :mini-variant=\"$store.state.app.miniVariant\"\n        enable-resize-watcher\n        :class=\"$store.state.app.config.color\"\n        dark\n        app\n        >\n        <v-container\n           fill-height\n           @mouseover.stop=\"setNavDrawerMaxi()\"\n           @mouseleave.stop=\"setNavDrawerMini()\"\n        >\n          <v-layout column justify-space-between>\n            <v-list>\n              <v-list-tile>\n                <!-- <v-btn icon @click.stop=\"toggleAppMode()\">\n                  <v-icon>view_day</v-icon>\n                </v-btn>\n                <v-btn icon @click.stop=\"toggleNavDrawerClipped()\">\n                  <v-icon v-html=\"$store.state.app.drawerclipped?'first_page':'last_page'\" v-if=\"!$store.state.app.miniVariant\"></v-icon>\n                </v-btn> -->\n              </v-list-tile>\n            </v-list>\n            <v-list>\n              <v-list-tile\n                value=\"true\"\n                v-for=\"(item, i) in $store.state.app.config.menu\"\n                :key=\"i\"\n                :to=\"item.startpage\"\n                >\n                  <v-btn icon>\n                    <v-icon v-html=\"item.icon\"></v-icon>\n                  </v-btn>\n                  <v-list-tile-content >\n                    <v-list-tile-title class=\"toolbarcaption\">{{item.caption}}</v-list-tile-title>\n                  </v-list-tile-content>\n              </v-list-tile>\n              <v-list-tile value=\"true\" @click.stop=\"openDialog('loginDialog')\" v-if=\"!$store.state.app.loggedin\">\n                  <v-btn icon>\n                    <v-icon>input</v-icon>\n                  </v-btn>\n                  <v-list-tile-content >\n                    <v-list-tile-title class=\"toolbarcaption\">LOGIN</v-list-tile-title>\n                  </v-list-tile-content>\n              </v-list-tile>\n              <v-list-tile value=\"true\" @click.stop=\"openDialog('logoutDialog')\" v-if=\"$store.state.app.loggedin\">\n                  <v-btn icon>\n                    <v-icon>power_settings_new</v-icon>\n                  </v-btn>\n                  <v-list-tile-content >\n                    <v-list-tile-title class=\"toolbarcaption\">LOGOUT</v-list-tile-title>\n                  </v-list-tile-content>\n              </v-list-tile>\n            </v-list>\n            <v-list>\n              <v-list-tile>\n                <router-link :to=\"{ name: 'start' }\">\n                  <div class=\"logo\">\n                    <img src=\"\" alt=\"\">\n                  </div>\n                  Database\n                </router-link>\n              </v-list-tile>\n            </v-list>\n          </v-layout>\n        </v-container>\n      </v-navigation-drawer>\n    </transition>\n    <transition :duration=\"200\" name=\"slideRight\" mode=\"out-in\">\n      <v-toolbar\n        v-if=\"!$store.state.app.drawer\"\n        app\n        height=\"90\"\n        class=\"border-bottom\"\n        >\n        <!-- <v-btn icon @click.stop=\"toggleAppMode()\">\n          <v-icon>view_quilt</v-icon>\n        </v-btn> -->\n        <v-container row >\n          <v-layout row class=\"compensation\">\n            <v-flex xs3 >\n              <v-layout column justify-center fill-height>\n                <v-toolbar-title>\n                  <router-link :to=\"{ name: 'start' }\">\n                    <div class=\"logo\">\n                      <h5 style=\"font-weight: 200; padding: 0px; margin: 0px;letter-spacing: 3px!important; line-height:25px;\">VC</h5>\n                      <h5 style=\"font-weight: 800; padding: 0px; margin: 0px;letter-spacing: 2px!important; line-height:25px;\">HC</h5>\n                    </div>\n                    Database\n                  </router-link>\n                </v-toolbar-title>\n              </v-layout>\n            </v-flex>\n            <v-flex >\n              <v-tabs icons-and-text color=\"grey lighten-4\">\n                <v-tabs-slider color=\"teal lighten-3\"></v-tabs-slider>\n                <v-tab\n                  v-for=\"(item, i) in $store.state.app.config.menu\"\n                  :key=\"i\"\n                  :to=\"item.startpage\"\n                  >\n                  {{item.caption}}\n                  <v-icon>{{item.icon}}</v-icon>\n                </v-tab>\n              </v-tabs>\n            </v-flex>\n            <v-spacer></v-spacer>\n          </v-layout>\n        </v-container>\n        <v-btn icon @click.stop=\"rightDrawer = !rightDrawer\">\n          <v-icon>menu</v-icon>\n        </v-btn>\n      </v-toolbar>\n    </transition>\n    <v-navigation-drawer\n      :right=\"true\"\n      v-model=\"$store.state.app.rightDrawer\"\n      enable-resize-watcher\n      app\n      >\n      <router-view name=\"rightdrawertop\"></router-view>\n      <router-view name=\"rightdrawerbottom\"></router-view>\n    </v-navigation-drawer>\n  </div>\n</template>\n\n<script>\nimport { mapActions, mapMutations } from 'vuex';\n\n/* eslint no-console: [\"error\", { allow: [\"log\"] }] */\n/* eslint no-return-assign: \"off\" */\n\nexport default {\n  data() {\n    return {\n    };\n  },\n  name: 'FundamentNav',\n  methods: {\n    ...mapMutations('JSONschema', [\n      'constructJSONschema',\n    ]),\n    ...mapMutations('dialogs', [\n      'openDialog',\n    ]),\n    ...mapActions('app', [\n      'toggleAppMode',\n    ]),\n    ...mapMutations('app', [\n      'setConfig',\n      'toggleNavDrawerMini',\n      'setNavDrawerMini',\n      'setNavDrawerMaxi',\n      'toggleNavDrawerClipped',\n      'toggleRightDrawer',\n      'toggleDrawer',\n      'toggleNavbar',\n    ]),\n  },\n  created() {\n  },\n};\n</script>\n<style scoped>\n.compensation {\n  margin-left: -15px;\n  margin-right: -15px;\n}\n.toolbarcaption {\n  color:white;\n}\n.logo {\n  color:white;\n  white-space: nowrap;\n  font-family: 'Montserrat', sans-serif;\n}\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Fundament/FundamentNav.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('transition',{attrs:{\"duration\":200,\"name\":\"slideLeft\",\"mode\":\"out-in\"}},[(_vm.$store.state.app.drawer)?_c('v-navigation-drawer',{class:_vm.$store.state.app.config.color,attrs:{\"mini-variant\":_vm.$store.state.app.miniVariant,\"enable-resize-watcher\":\"\",\"dark\":\"\",\"app\":\"\"}},[_c('v-container',{attrs:{\"fill-height\":\"\"},on:{\"mouseover\":function($event){$event.stopPropagation();_vm.setNavDrawerMaxi()},\"mouseleave\":function($event){$event.stopPropagation();_vm.setNavDrawerMini()}}},[_c('v-layout',{attrs:{\"column\":\"\",\"justify-space-between\":\"\"}},[_c('v-list',[_c('v-list-tile')],1),_vm._v(\" \"),_c('v-list',[_vm._l((_vm.$store.state.app.config.menu),function(item,i){return _c('v-list-tile',{key:i,attrs:{\"value\":\"true\",\"to\":item.startpage}},[_c('v-btn',{attrs:{\"icon\":\"\"}},[_c('v-icon',{domProps:{\"innerHTML\":_vm._s(item.icon)}})],1),_vm._v(\" \"),_c('v-list-tile-content',[_c('v-list-tile-title',{staticClass:\"toolbarcaption\"},[_vm._v(_vm._s(item.caption))])],1)],1)}),_vm._v(\" \"),(!_vm.$store.state.app.loggedin)?_c('v-list-tile',{attrs:{\"value\":\"true\"},on:{\"click\":function($event){$event.stopPropagation();_vm.openDialog('loginDialog')}}},[_c('v-btn',{attrs:{\"icon\":\"\"}},[_c('v-icon',[_vm._v(\"input\")])],1),_vm._v(\" \"),_c('v-list-tile-content',[_c('v-list-tile-title',{staticClass:\"toolbarcaption\"},[_vm._v(\"LOGIN\")])],1)],1):_vm._e(),_vm._v(\" \"),(_vm.$store.state.app.loggedin)?_c('v-list-tile',{attrs:{\"value\":\"true\"},on:{\"click\":function($event){$event.stopPropagation();_vm.openDialog('logoutDialog')}}},[_c('v-btn',{attrs:{\"icon\":\"\"}},[_c('v-icon',[_vm._v(\"power_settings_new\")])],1),_vm._v(\" \"),_c('v-list-tile-content',[_c('v-list-tile-title',{staticClass:\"toolbarcaption\"},[_vm._v(\"LOGOUT\")])],1)],1):_vm._e()],2),_vm._v(\" \"),_c('v-list',[_c('v-list-tile',[_c('router-link',{attrs:{\"to\":{ name: 'start' }}},[_c('div',{staticClass:\"logo\"},[_c('img',{attrs:{\"src\":\"\",\"alt\":\"\"}})]),_vm._v(\"\\n                Database\\n              \")])],1)],1)],1)],1)],1):_vm._e()],1),_vm._v(\" \"),_c('transition',{attrs:{\"duration\":200,\"name\":\"slideRight\",\"mode\":\"out-in\"}},[(!_vm.$store.state.app.drawer)?_c('v-toolbar',{staticClass:\"border-bottom\",attrs:{\"app\":\"\",\"height\":\"90\"}},[_c('v-container',{attrs:{\"row\":\"\"}},[_c('v-layout',{staticClass:\"compensation\",attrs:{\"row\":\"\"}},[_c('v-flex',{attrs:{\"xs3\":\"\"}},[_c('v-layout',{attrs:{\"column\":\"\",\"justify-center\":\"\",\"fill-height\":\"\"}},[_c('v-toolbar-title',[_c('router-link',{attrs:{\"to\":{ name: 'start' }}},[_c('div',{staticClass:\"logo\"},[_c('h5',{staticStyle:{\"font-weight\":\"200\",\"padding\":\"0px\",\"margin\":\"0px\",\"letter-spacing\":\"3px!important\",\"line-height\":\"25px\"}},[_vm._v(\"VC\")]),_vm._v(\" \"),_c('h5',{staticStyle:{\"font-weight\":\"800\",\"padding\":\"0px\",\"margin\":\"0px\",\"letter-spacing\":\"2px!important\",\"line-height\":\"25px\"}},[_vm._v(\"HC\")])]),_vm._v(\"\\n                  Database\\n                \")])],1)],1)],1),_vm._v(\" \"),_c('v-flex',[_c('v-tabs',{attrs:{\"icons-and-text\":\"\",\"color\":\"grey lighten-4\"}},[_c('v-tabs-slider',{attrs:{\"color\":\"teal lighten-3\"}}),_vm._v(\" \"),_vm._l((_vm.$store.state.app.config.menu),function(item,i){return _c('v-tab',{key:i,attrs:{\"to\":item.startpage}},[_vm._v(\"\\n                \"+_vm._s(item.caption)+\"\\n                \"),_c('v-icon',[_vm._v(_vm._s(item.icon))])],1)})],2)],1),_vm._v(\" \"),_c('v-spacer')],1)],1),_vm._v(\" \"),_c('v-btn',{attrs:{\"icon\":\"\"},on:{\"click\":function($event){$event.stopPropagation();_vm.rightDrawer = !_vm.rightDrawer}}},[_c('v-icon',[_vm._v(\"menu\")])],1)],1):_vm._e()],1),_vm._v(\" \"),_c('v-navigation-drawer',{attrs:{\"right\":true,\"enable-resize-watcher\":\"\",\"app\":\"\"},model:{value:(_vm.$store.state.app.rightDrawer),callback:function ($$v) {_vm.$set(_vm.$store.state.app, \"rightDrawer\", $$v)},expression:\"$store.state.app.rightDrawer\"}},[_c('router-view',{attrs:{\"name\":\"rightdrawertop\"}}),_vm._v(\" \"),_c('router-view',{attrs:{\"name\":\"rightdrawerbottom\"}})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-8e5873dc\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Fundament/FundamentNav.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-8e5873dc\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./FundamentNav.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./FundamentNav.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./FundamentNav.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-8e5873dc\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./FundamentNav.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-8e5873dc\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Fundament/FundamentNav.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"main-footer mt-5\"},[_c('v-container',{attrs:{\"grid-list-md\":\"\"}},[_c('v-layout',{attrs:{\"row\":\"\",\"wrap\":\"\",\"justify-space-between\":\"\"}},[_c('v-flex',{staticClass:\"footer-sep mt-3\",attrs:{\"xs12\":\"\"}},[_c('v-icon',[_vm._v(\"message\")]),_vm._v(\" CONTACT\\n      \")],1),_vm._v(\" \"),_c('v-flex',{staticClass:\"mr-4\",attrs:{\"xs12\":\"\",\"sm2\":\"\",\"md2\":\"\"}},[_c('a',{attrs:{\"href\":\"https://www.oeaw.ac.at/acdh/acdh-home/\",\"target\":\"_blank\",\"rel\":\"noopener\",\"aria-label\":\"ACDH\"}},[_c('img',{attrs:{\"src\":\"/DESIR_logo_01.png\",\"alt\":\"DESIR\",\"title\":\"DESIR Logo\"}})])]),_vm._v(\" \"),_c('v-flex',{attrs:{\"xs12\":\"\",\"sm3\":\"\"}},[_c('p',[_vm._v(\"\\n\\n            DARIAH Code Sprint\\n            \"),_c('br')]),_vm._v(\" \"),_c('p',[_vm._v(\"\\n            31 Jul-2 Aug 2018 Berlin (Germany)\\n          \")])]),_vm._v(\" \"),_c('v-spacer'),_vm._v(\" \"),_c('v-flex',{attrs:{\"xs12\":\"\",\"sm3\":\"\"}})],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-72d7e88f\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Fundament/FundamentFooter.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-72d7e88f\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./FundamentFooter.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./FundamentFooter.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./FundamentFooter.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-72d7e88f\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./FundamentFooter.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Fundament/FundamentFooter.vue\n// module id = null\n// module chunks = ","<template>\n  <div class=\"main-footer mt-5\">\n    <v-container grid-list-md>\n      <v-layout row wrap justify-space-between>\n        <v-flex xs12 class=\"footer-sep mt-3\">\n          <v-icon >message</v-icon> CONTACT\n        </v-flex>\n        <v-flex xs12 sm2 md2 class=\"mr-4\">\n          <a href=\"https://www.oeaw.ac.at/acdh/acdh-home/\" target=\"_blank\" rel=\"noopener\" aria-label=\"ACDH\">\n            <img src=\"/DESIR_logo_01.png\" alt=\"DESIR\" title=\"DESIR Logo\">\n          </a>\n        </v-flex>\n        <v-flex xs12 sm3>\n            <p>\n\n              DARIAH Code Sprint\n              <br>\n            </p>\n            <p>\n              31 Jul-2 Aug 2018 Berlin (Germany)\n            </p>\n        </v-flex>\n        <v-spacer></v-spacer>\n        <v-flex xs12 sm3>\n\n        </v-flex>\n      </v-layout>\n    </v-container>\n  </div>\n</template>\n\n<script>\n\n  export default {\n    data() {\n      return {\n      };\n    },\n    name: 'FundamentFooter',\n  };\n</script>\n<style media=\"screen\">\n/* ARCHE COPY STYLES, TO BE IMPLEMENTED */\n.main-footer {\n  background-color: #FFFFFF;\n}\n\n.footer-sep {\n  border-bottom: 1px solid #333333;\n  padding-bottom: 15px;\n  padding-top: 5px;\n  margin-bottom: 35px;\n  font-weight: 600;\n  font-size: 14px;\n}\n\n.helpdesk-button {\n  display: block;\n  background-color: #FFFFFF;\n  border: 1px solid #80cbc4!important;\n  border-radius: 20px;\n  padding: 5px 20px;\n  font-size: 11px;\n  font-weight: 600;\n  color: #80cbc4;\n  transition: background-color ease .2s, color ease .2s;\n}\n\n.helpdesk-button:hover, .helpdesk-button:focus {\n  background-color: #80cbc4!important;\n  color: #FFFFFF;\n  transition: background-color ease .2s, color ease .2s;\n}\nfooter .bodytext {\n  font-size: 15px; }\n\n.csc-textpic-text {\n  padding-left: 20px; }\n\nfooter h3 {\n  font-size: 17px; }\n\n.footer-login-button {\n  float: right;\n  margin-left: 8px; }\n\n.footer-login-button i {\n  color: $acdh_blue;\n  font-size: 22px;\n  margin-top: 6px;\n  transition: color ease .2s; }\n\n.footer-login-button i:hover, .footer-login-button i:focus {\n  color: #3B89AD; }\n\n.footer-imprint-bar {\n  text-align: center;\n  background-color: #F1F1F1;\n  padding: 8px;\n  font-size: 14px; }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Fundament/FundamentFooter.vue","<template lang=\"html\">\n    <v-dialog v-model=\"loginDialog.status\" id=\"askForStore\" max-width=\"500px\">\n      <v-card>\n        <v-card-title>\n          VCHC DATABASE LOGIN\n        </v-card-title>\n        <v-card-text>\n          <v-text-field v-model=\"username\" type=\"text\" label=\"Username\"></v-text-field>\n          <v-text-field v-model=\"password\" type=\"password\" label=\"Password\"></v-text-field>\n        </v-card-text>\n        <v-card-actions>\n        <v-btn @click=\"login\" large color=\"primary\">\n          LOGIN\n        </v-btn>\n        <v-btn @click=\"discard\" large color=\"secondary\">\n          CANCEL\n        </v-btn>\n      </v-card-actions>\n      </v-card>\n    </v-dialog>\n</template>\n\n<script>\nimport { mapGetters, mapState, mapMutations, mapActions } from 'vuex';\nimport HELPERS from '../../helpers';\n\nexport default {\n  mixins: [HELPERS],\n  data() {\n    return {\n      username: '',\n      password: '',\n    };\n  },\n  computed: {\n    ...mapState('dialogs', [\n      'loginDialog',\n    ]),\n    ...mapGetters('api', [\n      'f',\n    ]),\n  },\n  methods: {\n    ...mapActions('api', [\n      'init',\n    ]),\n    ...mapMutations('app', [\n      'loginMut',\n    ]),\n    ...mapMutations('dialogs', [\n      'closeDialog',\n    ]),\n    discard() {\n      this.closeDialog('loginDialog');\n    },\n    login() {\n      this.f('postLogin')({\n        user: {\n          username: this.username,\n          password: this.password,\n        },\n      }).then(() => {\n        this.loginMut();\n        this.init();\n        this.closeDialog('loginDialog');\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"css\">\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Dialogs/LoginDialog.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-dialog',{attrs:{\"id\":\"askForStore\",\"max-width\":\"500px\"},model:{value:(_vm.loginDialog.status),callback:function ($$v) {_vm.$set(_vm.loginDialog, \"status\", $$v)},expression:\"loginDialog.status\"}},[_c('v-card',[_c('v-card-title',[_vm._v(\"\\n      VCHC DATABASE LOGIN\\n    \")]),_vm._v(\" \"),_c('v-card-text',[_c('v-text-field',{attrs:{\"type\":\"text\",\"label\":\"Username\"},model:{value:(_vm.username),callback:function ($$v) {_vm.username=$$v},expression:\"username\"}}),_vm._v(\" \"),_c('v-text-field',{attrs:{\"type\":\"password\",\"label\":\"Password\"},model:{value:(_vm.password),callback:function ($$v) {_vm.password=$$v},expression:\"password\"}})],1),_vm._v(\" \"),_c('v-card-actions',[_c('v-btn',{attrs:{\"large\":\"\",\"color\":\"primary\"},on:{\"click\":_vm.login}},[_vm._v(\"\\n      LOGIN\\n    \")]),_vm._v(\" \"),_c('v-btn',{attrs:{\"large\":\"\",\"color\":\"secondary\"},on:{\"click\":_vm.discard}},[_vm._v(\"\\n      CANCEL\\n    \")])],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-8dc558b4\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Dialogs/LoginDialog.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-8dc558b4\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./LoginDialog.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./LoginDialog.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./LoginDialog.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-8dc558b4\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./LoginDialog.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Dialogs/LoginDialog.vue\n// module id = null\n// module chunks = ","<template lang=\"html\">\n    <v-dialog v-model=\"logoutDialog.status\" id=\"askForStore\" max-width=\"500px\">\n      <v-card>\n        <v-card-title>\n          VCHC DATABASE LOGIN\n        </v-card-title>\n        <v-card-text>\n          Do you really want to logout?\n        </v-card-text>\n        <v-card-actions>\n        <v-btn @click=\"logout\" large color=\"primary\">\n          LOGOUT\n        </v-btn>\n        <v-btn @click=\"discard\" large color=\"secondary\">\n          CANCEL\n        </v-btn>\n      </v-card-actions>\n      </v-card>\n    </v-dialog>\n</template>\n\n<script>\nimport { mapGetters, mapState, mapMutations } from 'vuex';\nimport HELPERS from '../../helpers';\n\nexport default {\n  data() {\n    return {\n    };\n  },\n  mixins: [HELPERS],\n  computed: {\n    ...mapState('dialogs', [\n      'logoutDialog',\n    ]),\n    ...mapGetters('api', [\n      'f',\n    ]),\n  },\n  methods: {\n    ...mapMutations('app', [\n      'logoutMut',\n    ]),\n    ...mapMutations('dialogs', [\n      'closeDialog',\n    ]),\n    discard() {\n      this.closeDialog('logoutDialog');\n    },\n    logout() {\n      this.f('getLogout')().then(() => {\n        this.logoutMut();\n        this.closeDialog('logoutDialog');\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"css\">\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Dialogs/LogoutDialog.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-dialog',{attrs:{\"id\":\"askForStore\",\"max-width\":\"500px\"},model:{value:(_vm.logoutDialog.status),callback:function ($$v) {_vm.$set(_vm.logoutDialog, \"status\", $$v)},expression:\"logoutDialog.status\"}},[_c('v-card',[_c('v-card-title',[_vm._v(\"\\n      VCHC DATABASE LOGIN\\n    \")]),_vm._v(\" \"),_c('v-card-text',[_vm._v(\"\\n      Do you really want to logout?\\n    \")]),_vm._v(\" \"),_c('v-card-actions',[_c('v-btn',{attrs:{\"large\":\"\",\"color\":\"primary\"},on:{\"click\":_vm.logout}},[_vm._v(\"\\n      LOGOUT\\n    \")]),_vm._v(\" \"),_c('v-btn',{attrs:{\"large\":\"\",\"color\":\"secondary\"},on:{\"click\":_vm.discard}},[_vm._v(\"\\n      CANCEL\\n    \")])],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-44859ff5\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Dialogs/LogoutDialog.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-44859ff5\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./LogoutDialog.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./LogoutDialog.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./LogoutDialog.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-44859ff5\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./LogoutDialog.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Dialogs/LogoutDialog.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('transition',{attrs:{\"appear\":\"\",\"duration\":250,\"name\":\"fadeLeft\"}},[_c('v-card',{staticClass:\"border-top mb-3\"},[(_vm.src)?_c('v-card-media',{attrs:{\"src\":_vm.src,\"height\":\"200px\"}}):_vm._e(),_vm._v(\" \"),_c('v-card-title',{attrs:{\"primary-title\":\"\"}},[_c('div',[_c('h3',{staticClass:\"headline mb-0\",domProps:{\"textContent\":_vm._s(_vm.caption)}}),_vm._v(\" \"),_vm._t(\"default\")],2)]),_vm._v(\" \"),(_vm.link)?_c('v-card-actions',[_c('v-btn',{staticClass:\"primary\",attrs:{\"flat\":\"\",\"to\":_vm.link}},[_vm._v(\"\\n      More\")])],1):_vm._e()],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-b902a6d2\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Fundament/FundamentCard.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-b902a6d2\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./FundamentCard.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./FundamentCard.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./FundamentCard.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b902a6d2\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./FundamentCard.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-b902a6d2\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Fundament/FundamentCard.vue\n// module id = null\n// module chunks = ","<template>\n  <transition appear :duration=\"250\" name=\"fadeLeft\">\n    <v-card class=\"border-top mb-3\">\n      <v-card-media :src=\"src\" v-if=\"src\" height=\"200px\">\n      </v-card-media>\n      <v-card-title primary-title>\n        <div>\n          <h3 class=\"headline mb-0\" v-text=\"caption\"></h3>\n          <slot></slot>\n        </div>\n      </v-card-title>\n      <v-card-actions v-if=\"link\">\n        <v-btn\n          flat\n          class=\"primary\"\n          :to=\"link\"\n          >\n        More</v-btn>\n      </v-card-actions>\n    </v-card>\n  </transition>\n</template>\n\n<script>\n\n  export default {\n    data() {\n      return {\n      };\n    },\n    props: [\n      'src',\n      'caption',\n      'link',\n    ],\n    name: 'FundamentJumbo',\n  };\n</script>\n<style scoped>\n\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Fundament/FundamentCard.vue","<template>\n  <div class=\"\">\n    <v-container grid-list-md>\n      <fundamentcard\n          caption=\"Load PDF from disk\"\n          >\n          <div >\n            <p>Post PDF to API</p>\n          </div>\n          <vue-dropzone ref=\"myVueDropzone\" id=\"file\" :options=\"dropzoneOptions\" v-on:vdropzone-success=\"results\"></vue-dropzone>\n        </fundamentcard>\n    </v-container>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions, mapMutations } from 'vuex';\n\nimport vue2Dropzone from 'vue2-dropzone'\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css'\nimport fundamentcard from './Fundament/FundamentCard';\n\nimport HELPERS from '../helpers';\n\n/* eslint no-unused-vars: [\"error\", {\"args\": \"none\"}] */\n/* eslint no-console: [\"error\", { allow: [\"log\"] }] */\n\nexport default {\n  mixins: [HELPERS],\n  components: {\n    vueDropzone: vue2Dropzone,\n    fundamentcard,\n  },\n  data() {\n    return {\n      dropzoneOptions: {\n          url: 'http://localhost:8080/extract',\n          thumbnailWidth: 150,\n          maxFilesize: 50,\n          headers: { }\n      },\n      testdata:[{\n        \"entryType\": \"article\",\n        \"address\": null,\n        \"booktitle\": \"• Archives Portal Europe network of excellence, D6.1 First Analysis report: Applying Web 2.0 solutions in archival applications\",\n        \"chapter\": null,\n        \"doi\": null,\n        \"edition\": null,\n        \"institution\": null,\n        \"journal\": null,\n        \"number\": null,\n        \"pages\": null,\n        \"publisher\": null,\n        \"series\": null,\n        \"title\": null,\n        \"volume\": null,\n        \"day\": null,\n        \"month\": null,\n        \"year\": \"January 9th 2018\",\n        \"authors\": \"\",\n        \"editors\": \"\",\n        \"tags\": null\n      }, {\n        \"entryType\": \"misc\",\n        \"address\": null,\n        \"booktitle\": null,\n        \"chapter\": null,\n        \"doi\": null,\n        \"edition\": null,\n        \"institution\": null,\n        \"journal\": null,\n        \"number\": null,\n        \"pages\": null,\n        \"publisher\": null,\n        \"series\": null,\n        \"title\": \"• Archives Portal Europe network of excellence D6.6 Second analysis report: Applying Web 2.0 solutions in archival applications\",\n        \"volume\": null,\n        \"day\": null,\n        \"month\": null,\n        \"year\": \"2014. January 9th 2018\",\n        \"authors\": \"\",\n        \"editors\": \"\",\n        \"tags\": null\n      }, {\n        \"entryType\": \"article\",\n        \"address\": null,\n        \"booktitle\": null,\n        \"chapter\": null,\n        \"doi\": \"doi:10.1080/23257962.2013.830066\",\n        \"edition\": null,\n        \"institution\": null,\n        \"journal\": \"Archives and Records\",\n        \"number\": \"2\",\n        \"pages\": \"235--282\",\n        \"publisher\": null,\n        \"series\": null,\n        \"title\": \"Developing Descriptive Standards: A Renewed Call to Action\",\n        \"volume\": \"34\",\n        \"day\": null,\n        \"month\": null,\n        \"year\": \"2013\",\n        \"authors\": \"• Bunn\",\n        \"editors\": \"\",\n        \"tags\": null\n      }, {\n        \"entryType\": \"misc\",\n        \"address\": null,\n        \"booktitle\": null,\n        \"chapter\": null,\n        \"doi\": null,\n        \"edition\": null,\n        \"institution\": null,\n        \"journal\": null,\n        \"number\": null,\n        \"pages\": null,\n        \"publisher\": null,\n        \"series\": null,\n        \"title\": \"Proposals for evolution of EAD\",\n        \"volume\": null,\n        \"day\": null,\n        \"month\": null,\n        \"year\": \"January 9th 2018\",\n        \"authors\": \"• Ead and Eac-Cpf Working Groups and Afnor null\",\n        \"editors\": \"\",\n        \"tags\": null\n      }, {\n        \"entryType\": \"article\",\n        \"address\": null,\n        \"booktitle\": \"Conseil international des Archives\",\n        \"chapter\": null,\n        \"doi\": null,\n        \"edition\": null,\n        \"institution\": \"• Experts group on archival description (ICA\",\n        \"journal\": null,\n        \"number\": null,\n        \"pages\": null,\n        \"publisher\": null,\n        \"series\": null,\n        \"title\": \"Records in Contexts, a Conceptual Model for Archival Description. Consultation Draft v0.1\",\n        \"volume\": null,\n        \"day\": null,\n        \"month\": null,\n        \"year\": \"September 2016. January 9th 2018\",\n        \"authors\": \"\",\n        \"editors\": \"\",\n        \"tags\": null\n      }, {\n        \"entryType\": \"article\",\n        \"address\": null,\n        \"booktitle\": null,\n        \"chapter\": null,\n        \"doi\": \"doi:10.1007/s10502-014-9225-1\",\n        \"edition\": null,\n        \"institution\": null,\n        \"journal\": \"Archival Science\",\n        \"number\": \"3\",\n        \"pages\": \"295--313\",\n        \"publisher\": null,\n        \"series\": null,\n        \"title\": \"An XML Schema for Enhancing the Semantic Interoperability of Archival Description\",\n        \"volume\": \"15\",\n        \"day\": null,\n        \"month\": null,\n        \"year\": \"September 1, 2015\",\n        \"authors\": \"• Gartner and Richard null\",\n        \"editors\": \"\",\n        \"tags\": null\n      }, {\n        \"entryType\": \"article\",\n        \"address\": null,\n        \"booktitle\": null,\n        \"chapter\": null,\n        \"doi\": null,\n        \"edition\": null,\n        \"institution\": \"• Library of Congress\",\n        \"journal\": \"Development of the Encoded Archival Description DTD\",\n        \"number\": null,\n        \"pages\": null,\n        \"publisher\": null,\n        \"series\": null,\n        \"title\": null,\n        \"volume\": null,\n        \"day\": null,\n        \"month\": null,\n        \"year\": \"2013. January 9th 2018\",\n        \"authors\": \"\",\n        \"editors\": \"\",\n        \"tags\": null\n      }, {\n        \"entryType\": \"misc\",\n        \"address\": \"Amsterdam, The Netherlands\",\n        \"booktitle\": null,\n        \"chapter\": null,\n        \"doi\": null,\n        \"edition\": null,\n        \"institution\": null,\n        \"journal\": null,\n        \"number\": null,\n        \"pages\": null,\n        \"publisher\": null,\n        \"series\": null,\n        \"title\": \"Internationalization and Localization of XML: Introducing \\\"ITS\",\n        \"volume\": null,\n        \"day\": null,\n        \"month\": null,\n        \"year\": \"2006. May 2006. January 9th 2018\",\n        \"authors\": \"• Lieske and null Christian and Sebastian Rahtz and Sasaki Felix\",\n        \"editors\": \"\",\n        \"tags\": null\n      }, {\n        \"entryType\": \"misc\",\n        \"address\": \"Dublin, Ireland\",\n        \"booktitle\": null,\n        \"chapter\": null,\n        \"doi\": null,\n        \"edition\": null,\n        \"institution\": null,\n        \"journal\": null,\n        \"number\": null,\n        \"pages\": null,\n        \"publisher\": null,\n        \"series\": null,\n        \"title\": \"Building infrastructures for archives in a digital world\",\n        \"volume\": null,\n        \"day\": null,\n        \"month\": null,\n        \"year\": \"Jun 2013. 2014\",\n        \"authors\": \"• Medves and null Maud and Laurent Romary\",\n        \"editors\": \"\",\n        \"tags\": null\n      }, {\n        \"entryType\": \"article\",\n        \"address\": \"Evanston, IL\",\n        \"booktitle\": \"ODD: One Document Does it All. Workshop at the Text Encoding Initiative Conference and Members Meeting\",\n        \"chapter\": null,\n        \"doi\": null,\n        \"edition\": null,\n        \"institution\": null,\n        \"journal\": null,\n        \"number\": null,\n        \"pages\": null,\n        \"publisher\": null,\n        \"series\": null,\n        \"title\": \"Advanced Topics in ODD\",\n        \"volume\": null,\n        \"day\": null,\n        \"month\": null,\n        \"year\": \"2014. Oct 22-24\",\n        \"authors\": \"• Rahtz and Sebastian null and Lou Burnard\",\n        \"editors\": \"\",\n        \"tags\": null\n      }, {\n        \"entryType\": \"misc\",\n        \"address\": \"Bryant, Mike\",\n        \"booktitle\": null,\n        \"chapter\": null,\n        \"doi\": null,\n        \"edition\": null,\n        \"institution\": null,\n        \"journal\": null,\n        \"number\": null,\n        \"pages\": null,\n        \"publisher\": null,\n        \"series\": null,\n        \"title\": null,\n        \"volume\": null,\n        \"day\": null,\n        \"month\": null,\n        \"year\": null,\n        \"authors\": \"• Riondet and null Charles and null Romary and Van Laurent and null Nispen and null Annelies and Kepa Rodriguez and null Joseba\",\n        \"editors\": \"\",\n        \"tags\": null\n      }, {\n        \"entryType\": \"misc\",\n        \"address\": null,\n        \"booktitle\": null,\n        \"chapter\": null,\n        \"doi\": null,\n        \"edition\": null,\n        \"institution\": null,\n        \"journal\": null,\n        \"number\": null,\n        \"pages\": null,\n        \"publisher\": null,\n        \"series\": null,\n        \"title\": \"Ongoing maintenance and customization of archival standards using ODD (EAC-CPF revision proposal). EAC-CPF revision proposal\",\n        \"volume\": null,\n        \"day\": null,\n        \"month\": null,\n        \"year\": \"2017\",\n        \"authors\": \"• Romary and null Laurent and Charles Riondet\",\n        \"editors\": \"\",\n        \"tags\": null\n      }, {\n        \"entryType\": \"misc\",\n        \"address\": null,\n        \"booktitle\": null,\n        \"chapter\": null,\n        \"doi\": null,\n        \"edition\": null,\n        \"institution\": null,\n        \"journal\": null,\n        \"number\": null,\n        \"pages\": null,\n        \"publisher\": null,\n        \"series\": null,\n        \"title\": null,\n        \"volume\": null,\n        \"day\": null,\n        \"month\": null,\n        \"year\": null,\n        \"authors\": \"• Romary and null Laurent and null Banski and null Piotr and Jack Bowers and null Emiliano and null Ďurčo and null Matej\",\n        \"editors\": \"\",\n        \"tags\": null\n      }, {\n        \"entryType\": \"article\",\n        \"address\": null,\n        \"booktitle\": null,\n        \"chapter\": null,\n        \"doi\": \"doi:10.1080/13614570109516972\",\n        \"edition\": null,\n        \"institution\": null,\n        \"journal\": \"New Review of Information Networking\",\n        \"number\": \"1\",\n        \"pages\": \"117--148\",\n        \"publisher\": null,\n        \"series\": null,\n        \"title\": \"Rethinking Balancing Flexibility and Interoperability\",\n        \"volume\": \"7\",\n        \"day\": null,\n        \"month\": null,\n        \"year\": \"2001\",\n        \"authors\": \"• Shaw and Elizabeth null\",\n        \"editors\": \"\",\n        \"tags\": null\n      }, {\n        \"entryType\": \"article\",\n        \"address\": null,\n        \"booktitle\": null,\n        \"chapter\": null,\n        \"doi\": null,\n        \"edition\": null,\n        \"institution\": null,\n        \"journal\": \"Literate Programming in XML\",\n        \"number\": null,\n        \"pages\": null,\n        \"publisher\": null,\n        \"series\": null,\n        \"title\": null,\n        \"volume\": null,\n        \"day\": null,\n        \"month\": null,\n        \"year\": \"2002. January 9th 2018\",\n        \"authors\": \"• Walsh and Norman null\",\n        \"editors\": \"\",\n        \"tags\": null\n      }],\n    };\n  },\n  computed: {\n    ...mapGetters('api', [\n      'types',\n    ]),\n  },\n  methods: {\n    ...mapMutations('entries', [\n      'setEntry',\n    ]),\n    results(file, res) {\n      console.log(res);\n      for (var i = 0; i < res.length; i++) {\n        this.setEntry(i , res[i]);\n      }\n      console.log(file, res);\n      router.push('entries');\n    }\n  },\n  computed: {\n  },\n  created() {\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/ImportPDF.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{},[_c('v-container',{attrs:{\"grid-list-md\":\"\"}},[_c('fundamentcard',{attrs:{\"caption\":\"Load PDF from disk\"}},[_c('div',[_c('p',[_vm._v(\"Post PDF to API\")])]),_vm._v(\" \"),_c('vue-dropzone',{ref:\"myVueDropzone\",attrs:{\"id\":\"file\",\"options\":_vm.dropzoneOptions},on:{\"vdropzone-success\":_vm.results}})],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5a92e4d4\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/ImportPDF.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5a92e4d4\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ImportPDF.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ImportPDF.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./ImportPDF.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5a92e4d4\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./ImportPDF.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-5a92e4d4\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/ImportPDF.vue\n// module id = null\n// module chunks = ","<template lang=\"html\">\n    <v-dialog\n        v-model=\"importDialog.status\"\n        id=\"askForStore\"\n        fullscreen\n        hide-overlay\n        transition=\"dialog-bottom-transition\"\n        scrollable\n      >\n      <v-card>\n        <v-toolbar card dark color=\"primary\">\n          <v-btn icon dark @click.native=\"discard\">\n            <v-icon>close</v-icon>\n          </v-btn>\n          <v-toolbar-title>Upload PDF for Extraction</v-toolbar-title>\n          <v-spacer></v-spacer>\n          <v-toolbar-items>\n            <v-btn dark flat @click.native=\"submit\">Save</v-btn>\n          </v-toolbar-items>\n          <v-menu bottom right offset-y>\n          </v-menu>\n        </v-toolbar>\n        <v-card-text>\n          <importpdf></importpdf>\n        </v-card-text>\n        <v-card-actions>\n      </v-card-actions>\n    </v-card>\n    </v-dialog>\n</template>\n\n<script>\nimport { mapGetters, mapState, mapMutations, mapActions } from 'vuex';\nimport importpdf from '../ImportPDF';\n\nimport HELPERS from '../../helpers';\nimport fundamentcard from '../Fundament/FundamentCard';\n\nexport default {\n  mixins: [HELPERS],\n  data() {\n    return {\n      dropzoneOptions: {\n          url: 'http://localhost:8080/extract',\n          thumbnailWidth: 150,\n          maxFilesize: 10.5,\n          headers: { \"My-Awesome-Header\": \"header value\" }\n      },\n      model:{},\n    };\n  },\n  components: {\n    fundamentcard,\n    importpdf,\n  },\n  computed: {\n    ...mapState('dialogs', [\n      'importDialog',\n    ]),\n    ...mapGetters('api', [\n      'schema',\n    ]),\n  },\n  methods: {\n    ...mapMutations('dialogs', [\n      'closeDialog',\n    ]),\n    discard() {\n      this.closeDialog('importDialog');\n    },\n    submit() {\n      this.closeDialog('importDialog');\n    },\n    ...mapActions('api', [\n      'get',\n      'post',\n      'delete',\n    ]),\n    onFileChange(e) {\n      this.$info('Load', 'onFileChange(e)', e);\n      const files = e.target.files || e.dataTransfer.files;\n      if (!files.length) return;\n      this.loadTtl(files[0]);\n    },\n  },\n};\n</script>\n\n<style lang=\"css\">\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Dialogs/ImportDialog.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-dialog',{attrs:{\"id\":\"askForStore\",\"fullscreen\":\"\",\"hide-overlay\":\"\",\"transition\":\"dialog-bottom-transition\",\"scrollable\":\"\"},model:{value:(_vm.importDialog.status),callback:function ($$v) {_vm.$set(_vm.importDialog, \"status\", $$v)},expression:\"importDialog.status\"}},[_c('v-card',[_c('v-toolbar',{attrs:{\"card\":\"\",\"dark\":\"\",\"color\":\"primary\"}},[_c('v-btn',{attrs:{\"icon\":\"\",\"dark\":\"\"},nativeOn:{\"click\":function($event){return _vm.discard($event)}}},[_c('v-icon',[_vm._v(\"close\")])],1),_vm._v(\" \"),_c('v-toolbar-title',[_vm._v(\"Upload PDF for Extraction\")]),_vm._v(\" \"),_c('v-spacer'),_vm._v(\" \"),_c('v-toolbar-items',[_c('v-btn',{attrs:{\"dark\":\"\",\"flat\":\"\"},nativeOn:{\"click\":function($event){return _vm.submit($event)}}},[_vm._v(\"Save\")])],1),_vm._v(\" \"),_c('v-menu',{attrs:{\"bottom\":\"\",\"right\":\"\",\"offset-y\":\"\"}})],1),_vm._v(\" \"),_c('v-card-text',[_c('importpdf')],1),_vm._v(\" \"),_c('v-card-actions')],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-097e1d0d\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Dialogs/ImportDialog.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-097e1d0d\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./ImportDialog.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ImportDialog.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./ImportDialog.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-097e1d0d\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./ImportDialog.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Dialogs/ImportDialog.vue\n// module id = null\n// module chunks = ","<template lang=\"html\">\n  <div>\n      <logindialog></logindialog>\n      <logoutdialog></logoutdialog>\n      <importdialog></importdialog>\n  </div>\n</template>\n\n<script>\nimport logindialog from './LoginDialog';\nimport logoutdialog from './LogoutDialog';\nimport importdialog from './ImportDialog';\n\nexport default {\n  components: {\n    logindialog,\n    logoutdialog,\n    importdialog,\n  },\n};\n</script>\n\n<style lang=\"css\">\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Dialogs/Dialogs.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('logindialog'),_vm._v(\" \"),_c('logoutdialog'),_vm._v(\" \"),_c('importdialog')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3e87a7f0\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Dialogs/Dialogs.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3e87a7f0\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Dialogs.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Dialogs.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Dialogs.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3e87a7f0\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Dialogs.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Dialogs/Dialogs.vue\n// module id = null\n// module chunks = ","<template>\n  <v-app>\n    <fundamentnav></fundamentnav>\n    <v-content>\n      <router-view name=\"Content\"></router-view>\n      <fundamentfooter></fundamentfooter>\n    </v-content>\n    <dialogs></dialogs>\n  </v-app>\n</template>\n\n<script>\nimport axios from 'axios';\nimport { mapActions, mapMutations } from 'vuex';\nimport fundamentnav from './Fundament/FundamentNav';\nimport fundamentfooter from './Fundament/FundamentFooter';\nimport dialogs from './Dialogs/Dialogs';\n/* eslint no-console: [\"error\", { allow: [\"log\"] }] */\n/* eslint no-return-assign: \"off\" */\n\nexport default {\n  data() {\n    return {\n    };\n  },\n  name: 'App',\n  components: {\n    fundamentnav,\n    fundamentfooter,\n    dialogs,\n  },\n  methods: {\n    ...mapActions('api', [\n      'init',\n    ]),\n    ...mapMutations('app', [\n      'setConfig',\n    ]),\n  },\n  created() {\n    axios.get('/nav.json')\n      .then(res => this.setConfig(res.data))\n      .catch(error => this.$log(error));\n    this.init();\n  },\n};\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/components/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-app',[_c('fundamentnav'),_vm._v(\" \"),_c('v-content',[_c('router-view',{attrs:{\"name\":\"Content\"}}),_vm._v(\" \"),_c('fundamentfooter')],1),_vm._v(\" \"),_c('dialogs')],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-2a517bfb\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/App.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2a517bfb\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/App.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-parallax',{staticClass:\"mt-4 mb-3 border-top\",attrs:{\"src\":_vm.src,\"height\":\"250\"}},[_c('v-layout',{attrs:{\"column\":\"\",\"align-center\":\"\",\"justify-center\":\"\"}},[_c('h1',[_vm._v(_vm._s(_vm.caption))]),_vm._v(\" \"),_c('p',[_vm._v(_vm._s(_vm.subtitle))])])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-22b7a91d\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Fundament/FundamentJumbo.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-22b7a91d\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./FundamentJumbo.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./FundamentJumbo.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./FundamentJumbo.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-22b7a91d\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./FundamentJumbo.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-22b7a91d\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Fundament/FundamentJumbo.vue\n// module id = null\n// module chunks = ","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-flex',{attrs:{\"xs12\":\"\"}},[_c('div',{staticClass:\"text-xs-center pb-2 mb-1 sec\"},[_c('v-icon',[_vm._v(_vm._s(_vm.icon))]),_vm._v(_vm._s(_vm.caption)+\"\\n  \")],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-6b6037cc\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Fundament/FundamentSectionDiv.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-6b6037cc\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./FundamentSectionDiv.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./FundamentSectionDiv.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./FundamentSectionDiv.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-6b6037cc\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./FundamentSectionDiv.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-6b6037cc\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Fundament/FundamentSectionDiv.vue\n// module id = null\n// module chunks = ","<template>\n  <div class=\"\">\n      <fundamentjumbo\n        src=\"/intro_bg.jpg\"\n        caption=\"DESIR Codesprint - GROBID/Bibsonomy/ORCID WebApp\"\n        subtitle=\"\"\n      >\n      </fundamentjumbo>\n      <v-container grid-list-md>\n        <v-layout justify-space-around row wrap>\n          <fundamentsectiondiv icon=\"description\" caption=\"GROBID\"></fundamentsectiondiv>\n          <v-flex xs12 sm6>\n            <fundamentcard\n              caption=\"Extraction bibliographic Information from PDF with GROBID.\"\n            >\n              <p class=\"card-text\">\n                <v-btn @click=\"openDialog('importDialog')\" color=\"primary\">EXTRACT</v-btn>\n              </p>\n            </fundamentcard>\n          </v-flex>\n          <v-flex xs12 sm6>\n            <fundamentcard\n              caption=\"Extraction bibliographic Information from Text File with GROBID.\"\n            >\n              <p class=\"card-text\"></p>\n              <p class=\"card-text\">\n                <v-btn @click=\"openDialog('importDialog')\" color=\"primary\">EXTRACT</v-btn>\n              </p>\n            </fundamentcard>\n          </v-flex>\n          <fundamentsectiondiv icon=\"device_hub\" caption=\"Bibsonomy\"></fundamentsectiondiv>\n          <!-- <v-flex xs12 sm6>\n            <fundamentcard\n              caption=\"Anlegen einer neuen Person.\"\n              :link=\"{ name: 'store', params: { lang: 'en' }}\"\n            >\n              <p class=\"card-text\"></p>\n            </fundamentcard>\n          </v-flex>\n          <v-flex xs12 sm6>\n            <fundamentcard\n              caption=\"Anlegen eines neuen Thesauruseintrags.\"\n              :link=\"{ name: 'create', params: { lang: 'en' }}\"\n            >\n              <p class=\"card-text\"></p>\n            </fundamentcard>\n          </v-flex> -->\n        </v-layout>\n      </v-container>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapState, mapMutations } from 'vuex';\nimport fundamentjumbo from './Fundament/FundamentJumbo';\nimport fundamentcard from './Fundament/FundamentCard';\nimport fundamentsectiondiv from './Fundament/FundamentSectionDiv';\n\nexport default {\n  components: {\n    fundamentjumbo,\n    fundamentcard,\n    fundamentsectiondiv,\n  },\n  name: 'start',\n  data() {\n    return {\n    };\n  },\n  methods: {\n    ...mapMutations('dialogs', [\n      'openDialog',\n    ]),\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Start.vue","<template>\n  <v-parallax :src=\"src\" height=\"250\" class=\"mt-4 mb-3 border-top\">\n    <v-layout column align-center justify-center>\n      <h1>{{caption}}</h1>\n      <p>{{subtitle}}</p>\n    </v-layout>\n  </v-parallax>\n</template>\n\n<script>\n\n  export default {\n    data() {\n      return {\n      };\n    },\n    props: [\n      'src',\n      'caption',\n      'subtitle',\n    ],\n    name: 'FundamentJumbo',\n  };\n</script>\n<style scoped>\n\n\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Fundament/FundamentJumbo.vue","<template>\n  <v-flex xs12>\n    <div class=\"text-xs-center pb-2 mb-1 sec\">\n      <v-icon>{{icon}}</v-icon>{{caption}}\n    </div>\n  </v-flex>\n</template>\n\n<script>\n\n  export default {\n    data() {\n      return {\n      };\n    },\n    props: [\n      'icon',\n      'caption',\n    ],\n    name: 'FundamentSectionDiv',\n  };\n</script>\n<style scoped>\n.sec {\n  border-bottom: 1px solid #dee2e6 !important;\n  color: #6c757d;\n}\n\n\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Fundament/FundamentSectionDiv.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{},[_c('fundamentjumbo',{attrs:{\"src\":\"/intro_bg.jpg\",\"caption\":\"DESIR Codesprint - GROBID/Bibsonomy/ORCID WebApp\",\"subtitle\":\"\"}}),_vm._v(\" \"),_c('v-container',{attrs:{\"grid-list-md\":\"\"}},[_c('v-layout',{attrs:{\"justify-space-around\":\"\",\"row\":\"\",\"wrap\":\"\"}},[_c('fundamentsectiondiv',{attrs:{\"icon\":\"description\",\"caption\":\"GROBID\"}}),_vm._v(\" \"),_c('v-flex',{attrs:{\"xs12\":\"\",\"sm6\":\"\"}},[_c('fundamentcard',{attrs:{\"caption\":\"Extraction bibliographic Information from PDF with GROBID.\"}},[_c('p',{staticClass:\"card-text\"},[_c('v-btn',{attrs:{\"color\":\"primary\"},on:{\"click\":function($event){_vm.openDialog('importDialog')}}},[_vm._v(\"EXTRACT\")])],1)])],1),_vm._v(\" \"),_c('v-flex',{attrs:{\"xs12\":\"\",\"sm6\":\"\"}},[_c('fundamentcard',{attrs:{\"caption\":\"Extraction bibliographic Information from Text File with GROBID.\"}},[_c('p',{staticClass:\"card-text\"}),_vm._v(\" \"),_c('p',{staticClass:\"card-text\"},[_c('v-btn',{attrs:{\"color\":\"primary\"},on:{\"click\":function($event){_vm.openDialog('importDialog')}}},[_vm._v(\"EXTRACT\")])],1)])],1),_vm._v(\" \"),_c('fundamentsectiondiv',{attrs:{\"icon\":\"device_hub\",\"caption\":\"Bibsonomy\"}})],1)],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-24aa985a\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Start.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-24aa985a\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Start.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Start.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Start.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-24aa985a\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Start.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-24aa985a\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Start.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"\">\r\n    <v-container grid-list-md>\r\n      <h3>Entries Found</h3>\r\n      <v-data-table\r\n        :headers=\"headers\"\r\n        :items=\"$store.state.entries.entries\"\r\n        class=\"elevation-1\"\r\n      >\r\n        <template slot=\"items\" slot-scope=\"props\">\r\n          <td>{{ props.item.booktitle }}</td>\r\n          <td>{{ props.item.entryType }}</td>\r\n          <td>{{ props.item.year }}</td>\r\n          <!-- <td><v-btn :to=\"{ name: 'e', params: { id:  props.item._id  }}\" color=\"info\">Details</v-btn></td> -->\r\n        </template>\r\n      </v-data-table>\r\n    </v-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapMutations } from 'vuex';\r\n\r\nimport HELPERS from '../helpers';\r\n\r\n/* eslint no-unused-vars: [\"error\", {\"args\": \"none\"}] */\r\n/* eslint no-console: [\"error\", { allow: [\"log\"] }] */\r\n\r\nexport default {\r\n  mixins: [HELPERS],\r\n  components: {\r\n  },\r\n  data() {\r\n    return {\r\n      view: {},\r\n      data: [],\r\n      headers: [\r\n        { text: 'booktitle', value: 'booktitle' },\r\n        { text: 'entryType', value: 'entryType' },\r\n        { text: 'year', value: 'year' },\r\n      ],\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapMutations('entries', [\r\n      'setEntry',\r\n    ]),\r\n  },\r\n  computed: {\r\n  },\r\n  created() {\r\n    this.get({ type: 'Collect', id:this.$route.params.id }).then((res) => {\r\n      this.view = res.data;\r\n    });\r\n    this.get({ type: 'Inventory', query:`{\"partOf\":\"${this.$route.params.id}\"}` }).then((res) => {\r\n      this.data = res.data;\r\n    });\r\n  },\r\n};\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/entries.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{},[_c('v-container',{attrs:{\"grid-list-md\":\"\"}},[_c('h3',[_vm._v(\"Entries Found\")]),_vm._v(\" \"),_c('v-data-table',{staticClass:\"elevation-1\",attrs:{\"headers\":_vm.headers,\"items\":_vm.$store.state.entries.entries},scopedSlots:_vm._u([{key:\"items\",fn:function(props){return [_c('td',[_vm._v(_vm._s(props.item.booktitle))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(props.item.entryType))]),_vm._v(\" \"),_c('td',[_vm._v(_vm._s(props.item.year))])]}}])})],1)],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-09409f57\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/entries.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-09409f57\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./entries.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./entries.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./entries.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-09409f57\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./entries.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-09409f57\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/entries.vue\n// module id = null\n// module chunks = ","import Vue from 'vue';\nimport Router from 'vue-router';\nimport App from '../components/App';\nimport Start from '../components/Start';\nimport ImportPDF from '../components/ImportPDF';\nimport Entries from '../components/entries';\n\nVue.use(Router);\n\nexport default new Router({\n  routes: [\n    {\n      path: '/',\n      name: 'root',\n      redirect: (to) => {\n        if (to.params.lang !== 'en') {\n          // english only for now\n          // const language = window.navigator.userLanguage || window.navigator.language;\n          return '/en';\n        }\n        return to.fullPath;\n      },\n    },\n    {\n      path: '/:lang',\n      components: {\n        default: App,\n      },\n      // Children to the root path '/'\n      children: [\n        {\n          path: 'start',\n          name: 'start',\n          components: {\n            Content: Start,\n          },\n        },\n        {\n          path: 'import',\n          name: 'import',\n          components: {\n            Content: ImportPDF,\n          },\n        },\n        {\n          path: 'entries',\n          name: 'entries',\n          components: {\n            Content: Entries,\n          },\n        },\n        {\n          path: '',\n          redirect: { name: 'start' },\n        },\n      ],\n    },\n  ],\n  scrollBehavior() {\n    // always scroll back to the top\n    return { x: 0, y: 0 };\n  },\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/router/index.js","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue';\nimport Vuetify from 'vuetify';\nimport VueAxios from 'vue-axios';\nimport axios from 'axios';\n\nimport 'vuetify/dist/vuetify.min.css';\nimport 'vue2-animate/dist/vue2-animate.min.css';\n\n\nimport { sync } from 'vuex-router-sync';\nimport vueLogger from 'vue-logger';\n\nimport store from './store/index';\nimport router from './router';\nimport './components/Fundament/Fundament.css';\n\nVue.use(vueLogger, {\n  dev: process.env.NODE_ENV !== 'production',\n  shortname: true,\n  levels: ['log', 'warn', 'debug', 'error', 'dir', 'info'],\n});\n\nVue.use(VueAxios, axios);\n\nVue.use(Vuetify, {\n  theme: {\n    primary: '#0059c7',\n    accent: '#2c76be',\n    secondary: '#2c76be',\n    info: '#B2DFDB',\n  },\n});\n\nsync(store, router);\n\nVue.config.productionTip = false;\n\n/* eslint-disable no-new */\nnew Vue({\n  store,\n  router,\n}).$mount('#app');\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}